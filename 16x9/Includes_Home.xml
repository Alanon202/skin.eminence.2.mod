<?xml version="1.0" encoding="UTF-8"?>
<includes>
    <include name="Home_TextOnly_Animate">
        <animation effect="slide" start="0" end="0,106" time="500" tween="back" reversible="false" easing="out" condition="[Control.HasFocus(9001) | Control.HasFocus(9101)]">Conditional</animation>
        <animation effect="slide" end="0" start="0,106" time="150" reversible="false" condition="![Control.HasFocus(9001) | Control.HasFocus(9101)]">Conditional</animation>
    </include>
    <include name="Home_Icons_Animate">
        <animation effect="slide" start="0" end="0,266" time="500" tween="back" reversible="false" easing="out" condition="[Control.HasFocus(9001) | Control.HasFocus(9101)]">Conditional</animation>
        <animation effect="slide" end="0" start="0,266" time="150" reversible="false" condition="![Control.HasFocus(9001) | Control.HasFocus(9101)]">Conditional</animation>
    </include>
    <include name="Home_Vertical_Animate">
        <animation effect="slide" start="0" end="-232,0" time="500" tween="back" reversible="true" easing="out" condition="[Control.HasFocus(9001) | Control.HasFocus(9101)]">Conditional</animation>
    </include>	
    <include name="Home_Dialogs_TextOnly_Animate">
        <animation effect="slide" tween="quadratic" easing="in" time="150" end="0,106" start="0" reversible="false" condition="!String.IsEmpty(Window(home).Property(FO9001)) + String.IsEqual(Window(home).Property(FO9001),2)">Conditional</animation>
        <animation effect="slide" start="0" end="0,106" time="500" tween="back" reversible="false" easing="out" condition="!String.IsEmpty(Window(home).Property(FO9001)) + String.IsEqual(Window(home).Property(FO9001),1)">Conditional</animation>
        <animation effect="slide" end="0" start="0,106" time="150" reversible="false" condition="String.IsEmpty(Window(home).Property(FO9001))">Conditional</animation>
    </include>
    <include name="Home_Dialogs_Icons_Animate">
        <animation effect="slide" tween="quadratic" easing="in" time="150" end="0,266" start="0" reversible="false" condition="!String.IsEmpty(Window(home).Property(FO9001)) + String.IsEqual(Window(home).Property(FO9001),2)">Conditional</animation>
        <animation effect="slide" start="0" end="0,266" time="500" tween="back" reversible="false" easing="out" condition="!String.IsEmpty(Window(home).Property(FO9001)) + String.IsEqual(Window(home).Property(FO9001),1)">Conditional</animation>
        <animation effect="slide" end="0" start="0,266" time="150" reversible="false" condition="String.IsEmpty(Window(home).Property(FO9001))">Conditional</animation>
    </include>
    <include name="Home_Menu_BG_Small">
        <control type="image">    
            <bottom>55</bottom>           
            <height>211</height>
            <aspectratio>scale</aspectratio>
            <texture colordiffuse="$VAR[HomeBar_Color]">common/white.png</texture>
            <animation effect="fade" start="100" end="90" time="200" condition="Skin.HasSetting(home.transparent)">Conditional</animation>
        </control>
        <control type="group">
            <bottom>-266</bottom>
            <height>64</height>
            <visible>Window.IsVisible(home) | Window.IsVisible(weather)</visible>
            <visible>system.getbool(lookandfeel.enablerssfeeds)</visible>
            <animation effect="slide" end="0,-266" condition="true">Conditional</animation>
            <animation effect="slide" start="-1200" end="0" time="250">VisibleChange</animation>
            <control type="image">            
                <top>9</top>
                <width>1920</width>         
                <height>55</height>                     
                <texture colordiffuse="$VAR[HomeBar_Color]">common/white.png</texture>
                <animation effect="fade" start="100" end="90" time="200" condition="Skin.HasSetting(home.transparent)">Conditional</animation>
            </control>
            <control type="image">
                <left>16</left>
                <top>16</top>
                <width>32</width>
                <height>32</height>
                <texture colordiffuse="LineLabel">common/rss.png</texture>
            </control>
        </control>
    </include>
    <include name="Home_Menu_BG_Big">
        <control type="image">
            <animation effect="slide" end="0,160" condition="Skin.String(HomeStyle, textonly)">Conditional</animation>
            <bottom>-64</bottom>
            <height>330</height>
            <aspectratio>scale</aspectratio>           
            <texture colordiffuse="$VAR[HomeBar_Color]">common/white.png</texture>
            <animation effect="fade" start="100" end="90" time="200" condition="Skin.HasSetting(home.transparent)">Conditional</animation>
        </control>
    </include>
    <include name="Home_Menu_BG_Vertical">
        <control type="image">
            <animation effect="slide" end="0,160" condition="Skin.String(HomeStyle, vertical)">Conditional</animation>
            <bottom>0</bottom>
            <top>-500</top>
			<width>240</width>
            <aspectratio>scale</aspectratio>           
            <texture colordiffuse="$VAR[HomeBar_Color]">common/white.png</texture>
            <animation effect="fade" start="100" end="90" time="200" condition="Skin.HasSetting(home.transparent)">Conditional</animation>
        </control>
    </include>    
	<!-- Home Bar -->
    <include name="Home_Menu">
		<!-- Vertical menu -->
        <control type="group">
            <!-- Background -->
            <include condition="!Skin.String(HomeStyle, textintile) + !Skin.String(HomeStyle, vertical)">Home_Menu_BG_Big</include>
            <include condition="Skin.String(HomeStyle, textintile)">Home_Menu_BG_Small</include>
			<include condition="Skin.String(HomeStyle, vertical)">Home_Menu_BG_Vertical</include>
			
            <control type="wraplist" id="9000">
                <animation effect="slide" end="16" condition="!Integer.IsGreater(Container(9000).NumItems,0)">Conditional</animation>
                <top>0</top>
				<left>13</left>
                <height>1080</height>
				<width>240</width>
				<focusposition>5</focusposition>
				<visible>Skin.String(HomeStyle, vertical)</visible>
                <onright condition="!Player.HasMedia + !Window.IsVisible(PlayerControls.xml)">SetProperty(FO9001,1,home)</onright>
                <onleft condition="!Player.HasMedia + !Window.IsVisible(PlayerControls.xml)">90001</onleft>
				<onright condition="!Player.HasMedia + !Window.IsVisible(PlayerControls.xml)">9001</onright>
                <onright condition="Player.HasMedia + !Window.IsVisible(PlayerControls.xml)">9005</onright>
                <onleft condition="Integer.IsGreater(Container(9002).NumItems,0) + !Window.IsVisible(PlayerControls.xml)">SetProperty(submenumouse,1,home)</onleft>
                <onleft condition="Integer.IsGreater(Container(9002).NumItems,0) + !Window.IsVisible(PlayerControls.xml)">9002</onleft>
				<onleft condition="!Integer.IsGreater(Container(9002).NumItems,0) + !Integer.IsGreater(Container(90100).NumItems,0) + !Window.IsVisible(PlayerControls.xml) + !Skin.HasSetting(DisableShowcase)">ActivateWindow(1131)</onleft>
				<animation type="Visible">
                    <effect type="slide" start="-1000,1300" end="0" time="150" />
                </animation>
                <orientation>vertical</orientation>
                <scrolltime tween="sine" easing="out">240</scrolltime>			
			    <itemlayout width="240" height="100">
                    <control type="label">
                        <top>16</top>
                        <height>78</height>
                        <width>200</width>
                        <align>center</align>
                        <aligny>center</aligny>
                        <font>Font-Flag</font>
                        <textcolor>HomeBarFG</textcolor>
                        <label>$INFO[ListItem.Label]</label>
                        <animation effect="fade" start="50" end="50" condition="true">Conditional</animation>
                    </control>
                </itemlayout>
                <focusedlayout width="240" height="100">
                    <control type="label">
                        <top>16</top>
                        <height>78</height>
                        <width>200</width>
                        <align>center</align>
                        <aligny>center</aligny>
                        <font>Font-Flag</font>                      
                        <textcolor>$VAR[Defs_HomeTextColor]</textcolor>
                        <label>$INFO[ListItem.Label]</label>
                        <animation effect="slide" start="0" end="0,-12" time="100" reversible="false">Focus</animation>
                    </control>
                    <control type="image">
                        <centerleft>100</centerleft>
                        <top>88</top>
                        <width>16</width>
                        <height>16</height>
                        <aspectratio>stretch</aspectratio>
                        <texture colordiffuse="$VAR[Defs_HomeTileColor]">common/16-arrow-left.png</texture>
                        <visible>Integer.IsGreater(Container(9002).NumItems,0) | Integer.IsGreater(Container(90100).NumItems,0)</visible>
                        <animation effect="fade" start="0" end="100" time="300" delay="300" reversible="false">Focus</animation>
                        <visible>![String.Contains(Container(9000).ListItem.Property(ParentalControl),yes) + !String.IsEqual(Skin.String(mypassword),Skin.String(passcode))]</visible>
                    </control>					
                    <control type="image">
                        <centerleft>100</centerleft>
                        <top>3</top>
                        <width>22</width>
                        <height>22</height>
                        <aspectratio>stretch</aspectratio>
                        <texture colordiffuse="$VAR[Defs_HomeTileColor]">common/lock.png</texture>
                        <visible>Integer.IsGreater(Container(9002).NumItems,0)</visible>
                        <animation effect="fade" start="0" end="100" time="300" delay="300" reversible="false">Focus</animation>
                        <visible>[String.Contains(Container(9000).ListItem.Property(ParentalControl),yes) + !String.IsEqual(Skin.String(mypassword),Skin.String(passcode))]</visible>
                    </control>
                    <control type="image">
                        <top>80</top>
                        <width>210</width>
                        <height>6</height>
                        <texture colordiffuse="$VAR[Defs_HomeTileColor]">common/white.png</texture>
                        <aspectratio>scale</aspectratio>
                    </control>
                    <control type="image">
                        <centerleft>85</centerleft>
                        <top>62</top>
                        <width>16</width>
                        <height>16</height>
                        <aspectratio>stretch</aspectratio>
                        <texture colordiffuse="$VAR[Defs_HomeTileColor]" flipy="true">common/16-arrow-down.png</texture>
                        <visible>Integer.IsGreater(Container(9001).NumItems,0) + Skin.HasSetting(home.hidewidgetbox)</visible>
                        <animation effect="fade" start="0" end="100" time="300" delay="300" reversible="false">Focus</animation>
                        <visible>![String.Contains(Container(9000).ListItem.Property(ParentalControl),yes) + !String.IsEqual(Skin.String(mypassword),Skin.String(passcode))]</visible>
                    </control>					
                </focusedlayout>
                <content>
                    <include>skinshortcuts-mainmenu</include>
                </content>
			</control>	
        
            <!-- Main list -->
            <control type="panel" id="9000">
                <animation effect="slide" end="0,160" condition="Skin.String(HomeStyle, textonly)">Conditional</animation>
                <animation effect="slide" end="94" condition="!Integer.IsGreater(Container(9000).NumItems,0)">Conditional</animation>
                <animation effect="slide" end="94" condition="!Integer.IsGreater(Container(9000).NumItems,1)">Conditional</animation>
                <animation effect="slide" end="94" condition="!Integer.IsGreater(Container(9000).NumItems,2)">Conditional</animation>
                <animation effect="slide" end="94" condition="!Integer.IsGreater(Container(9000).NumItems,3)">Conditional</animation>
                <animation effect="slide" end="94" condition="!Integer.IsGreater(Container(9000).NumItems,4)">Conditional</animation>
                <animation effect="slide" end="94" condition="!Integer.IsGreater(Container(9000).NumItems,5)">Conditional</animation>
                <animation effect="slide" end="94" condition="!Integer.IsGreater(Container(9000).NumItems,6)">Conditional</animation>
                <animation effect="slide" end="94" condition="!Integer.IsGreater(Container(9000).NumItems,7)">Conditional</animation>
                <animation effect="slide" end="94" condition="!Integer.IsGreater(Container(9000).NumItems,8)">Conditional</animation>
                <animation effect="slide" end="94" condition="!Integer.IsGreater(Container(9000).NumItems,9)">Conditional</animation>
                <left>16</left>                 
                <right>16</right>
                <bottom>0</bottom>
                <height>266</height>
				<visible>!Skin.String(HomeStyle, vertical)</visible>
                <onup condition="!Player.HasMedia + !Window.IsVisible(PlayerControls.xml)">SetProperty(FO9001,1,home)</onup>
                <onup condition="!Player.HasMedia + !Window.IsVisible(PlayerControls.xml)">9001</onup>
                <onup condition="Player.HasMedia + !Window.IsVisible(PlayerControls.xml)">9005</onup>
                <ondown condition="Integer.IsGreater(Container(9002).NumItems,0) + !Window.IsVisible(PlayerControls.xml) + !Skin.String(SubmenuStyle, Touch)">SetProperty(submenumouse,1,home)</ondown>
                <ondown condition="Integer.IsGreater(Container(9002).NumItems,0) + !Window.IsVisible(PlayerControls.xml)">9002</ondown>
				<ondown condition="!Integer.IsGreater(Container(9002).NumItems,0) + !Window.IsVisible(PlayerControls.xml) + !Skin.HasSetting(DisableShowcase)">ActivateWindow(1131)</ondown>
				<animation type="Visible">
                    <effect type="slide" start="0,266" end="0" time="150" />
                </animation>
                <orientation>horizontal</orientation>
                <scrolltime tween="sine" easing="out">240</scrolltime>
                <!-- Default Home -->                      
                <itemlayout width="188" height="266" condition="!Skin.String(HomeStyle, emptybeveled) + !Skin.String(HomeStyle, squared) + !Skin.String(HomeStyle, emptysquared) + !Skin.String(HomeStyle, rounded) + !Skin.String(HomeStyle, emptyrounded) + !Skin.String(HomeStyle, circle) + !Skin.String(HomeStyle, emptycircle) + !Skin.String(HomeStyle, textintile) + !Skin.String(HomeStyle, textonly) + !Skin.String(HomeStyle, iconsonly)">                   
                    <control type="image">
                        <top>16</top>
                        <width>196</width>
                        <height>170</height>
                        <texture colordiffuse="HomeBarTile">common/tile.png</texture>
                        <aspectratio>keep</aspectratio>
                        <visible>String.IsEmpty(ListItem.Property(tilecolor)) | !Skin.HasSetting(home.tilecolor.nofocus) | !Skin.HasSetting(home.tilecolor)</visible>
                    </control>
                    <control type="image">
                        <top>16</top>
                        <width>196</width>
                        <height>170</height>
                        <texture colordiffuse="$VAR[HighlightColor]">common/tile.png</texture>
                        <animation effect="fade" start="100" end="25" condition="true">Conditional</animation>
                        <aspectratio>keep</aspectratio>
                        <visible>String.IsEmpty(ListItem.Property(tilecolor)) + Skin.HasSetting(home.tilecolor.nofocus) + Skin.HasSetting(home.tilecolor)</visible>
                    </control>
                    <control type="image">
                        <top>16</top>
                        <width>196</width>
                        <height>170</height>
                        <animation effect="fade" start="100" end="25" condition="true">Conditional</animation>
                        <texture colordiffuse="HomeBarFG" diffuse="common/tile.png" aligny="center" align="center">special://skin/extras/colors/$INFO[ListItem.Property(tilecolor)].png</texture>
                        <aspectratio scalediffuse="false">stretch</aspectratio>
                        <visible>!String.IsEmpty(ListItem.Property(tilecolor)) + Skin.HasSetting(home.tilecolor.nofocus) + Skin.HasSetting(home.tilecolor)</visible>
                    </control>
                    <control type="image">
                        <top>16</top>
                        <width>196</width>
                        <height>170</height>
                        <texture colordiffuse="HomeBarFG" diffuse="common/tile.png" aligny="center" align="center">$INFO[ListItem.Icon]</texture>
                        <aspectratio scalediffuse="false">center</aspectratio>
                        <animation effect="fade" start="50" end="50" condition="true">Conditional</animation>
                    </control>
                    <control type="label">
                        <top>188</top>
                        <height>78</height>
                        <width>170</width>
                        <align>center</align>
                        <aligny>center</aligny>
                        <font>Font-HomeMenu</font>
                        <textcolor>HomeBarFG</textcolor>
                        <label>$INFO[ListItem.Label]</label>
                        <animation effect="fade" start="50" end="50" condition="true">Conditional</animation>
                    </control>
                </itemlayout>                     
                <focusedlayout width="188" height="266" condition="!Skin.String(HomeStyle, emptybeveled) + !Skin.String(HomeStyle, squared) + !Skin.String(HomeStyle, emptysquared)  + !Skin.String(HomeStyle, rounded) + !Skin.String(HomeStyle, emptyrounded) + !Skin.String(HomeStyle, circle) + !Skin.String(HomeStyle, emptycircle) + !Skin.String(HomeStyle, textintile) + !Skin.String(HomeStyle, textonly) + !Skin.String(HomeStyle, iconsonly)">
                    <control type="image">
                        <top>16</top>
                        <width>196</width>
                        <height>170</height>
                        <texture colordiffuse="$VAR[Defs_HomeTileColor]">common/tile.png</texture>
                        <aspectratio>keep</aspectratio>
                    </control>
                    <control type="image">
                        <top>16</top>
                        <width>196</width>
                        <height>170</height>
                        <texture colordiffuse="Selected" diffuse="common/tile.png" aligny="center" align="center">$INFO[ListItem.Icon]</texture>
                        <aspectratio scalediffuse="false">center</aspectratio>
                    </control>
                    <control type="image">
                        <centerleft>85</centerleft>
                        <bottom>90</bottom>
                        <width>22</width>
                        <height>22</height>
                        <aspectratio>stretch</aspectratio>
                        <texture colordiffuse="Selected">common/lock.png</texture>
                        <visible>[String.Contains(Container(9000).ListItem.Property(ParentalControl),yes) + !String.IsEqual(Skin.String(mypassword),Skin.String(passcode))]</visible>
                    </control>
                    <control type="label">
                        <top>188</top>
                        <height>78</height>
                        <width>170</width>
                        <align>center</align>
                        <aligny>center</aligny>
                        <font>Font-HomeMenu</font>                  
                        <textcolor>$VAR[Defs_HomeTextColor]</textcolor>
                        <label>$INFO[ListItem.Label]</label>
                        <animation effect="slide" start="0" end="0,-12" time="100" reversible="false">Focus</animation>
                    </control>
                    <control type="image">
                        <centerleft>85</centerleft>
                        <bottom>0</bottom>
                        <width>16</width>
                        <height>16</height>
                        <aspectratio>stretch</aspectratio>
                        <texture colordiffuse="$VAR[Defs_HomeTileColor]">common/16-arrow-down.png</texture>
                        <visible>Integer.IsGreater(Container(9002).NumItems,0)</visible>
                        <animation effect="fade" start="0" end="100" time="300" delay="300" reversible="false">Focus</animation>
                    </control>
                    <control type="image">
                        <centerleft>85</centerleft>
                        <bottom>23</bottom>
                        <width>16</width>
                        <height>16</height>
                        <aspectratio>stretch</aspectratio>
                        <texture colordiffuse="$VAR[Defs_HomeTileColor]" flipy="true">common/16-arrow-down.png</texture>
						<visible>Integer.IsGreater(Container(9001).NumItems,0) + Skin.HasSetting(home.hidewidgetbox)</visible>
                        <animation effect="fade" start="0" end="100" time="300" delay="300" reversible="false">Focus</animation>
                    </control>					
                    <control type="image">
                        <bottom>16</bottom>
                        <width>170</width>
                        <height>6</height>
                        <texture colordiffuse="$VAR[Defs_HomeTileColor]">common/white.png</texture>
                        <aspectratio>scale</aspectratio>
                    </control>
                </focusedlayout>
                <!-- Empty Beveled Tiles -->
                <itemlayout width="188" height="266" condition="Skin.String(HomeStyle, emptybeveled)">                    
                    <control type="image">
                        <top>16</top>
                        <width>196</width>
                        <height>170</height>
                        <texture colordiffuse="HomeBarTile">common/tile_empty.png</texture>
                        <aspectratio>keep</aspectratio>
                        <visible>String.IsEmpty(ListItem.Property(tilecolor)) | !Skin.HasSetting(home.tilecolor.nofocus) | !Skin.HasSetting(home.tilecolor)</visible>
                    </control>
                    <control type="image">
                        <top>16</top>
                        <width>196</width>
                        <height>170</height>
                        <texture colordiffuse="$VAR[HighlightColor]">common/tile_empty.png</texture>
                        <animation effect="fade" start="100" end="25" condition="true">Conditional</animation>
                        <aspectratio>keep</aspectratio>
                        <visible>String.IsEmpty(ListItem.Property(tilecolor)) + Skin.HasSetting(home.tilecolor.nofocus) + Skin.HasSetting(home.tilecolor)</visible>
                    </control>
                    <control type="image">
                        <top>16</top>
                        <width>196</width>
                        <height>170</height>
                        <animation effect="fade" start="100" end="25" condition="true">Conditional</animation>
                        <texture colordiffuse="HomeBarFG" diffuse="common/tile_empty.png" aligny="center" align="center">special://skin/extras/colors/$INFO[ListItem.Property(tilecolor)].png</texture>
                        <aspectratio scalediffuse="false">stretch</aspectratio>
                        <visible>!String.IsEmpty(ListItem.Property(tilecolor)) + Skin.HasSetting(home.tilecolor.nofocus) + Skin.HasSetting(home.tilecolor)</visible>
                    </control>
                    <control type="image">
                        <top>16</top>
                        <width>196</width>
                        <height>170</height>
                        <texture colordiffuse="HomeBarFG" diffuse="common/tile.png" aligny="center" align="center">$INFO[ListItem.Icon]</texture>
                        <aspectratio scalediffuse="false">center</aspectratio>
                        <animation effect="fade" start="50" end="50" condition="true">Conditional</animation>
                    </control>
                    <control type="label">
                         <top>188</top>
                        <height>78</height>
                        <width>170</width>
                        <align>center</align>
                        <aligny>center</aligny>
                        <font>Font-HomeMenu</font>
                        <textcolor>HomeBarFG</textcolor>
                        <label>$INFO[ListItem.Label]</label>
                        <animation effect="fade" start="50" end="50" condition="true">Conditional</animation>
                    </control>
                </itemlayout>
                <focusedlayout width="188" height="266" condition="Skin.String(HomeStyle, emptybeveled)">
                    <control type="image">
                        <top>16</top>
                        <width>196</width>
                        <height>170</height>
                        <texture colordiffuse="$VAR[Defs_HomeTileColor]">common/tile_empty.png</texture>
                        <aspectratio>keep</aspectratio>
                    </control>
                    <control type="image">
                        <top>16</top>
                        <width>196</width>
                        <height>170</height>
                        <texture colordiffuse="$VAR[Defs_HomeTileColor]" diffuse="common/tile.png" aligny="center" align="center">$INFO[ListItem.Icon]</texture>
                        <aspectratio scalediffuse="false">center</aspectratio>
                    </control>
                    <control type="image">
                        <centerleft>85</centerleft>
                        <bottom>95</bottom>
                        <width>22</width>
                        <height>22</height>
                        <aspectratio>stretch</aspectratio>
                        <texture colordiffuse="$VAR[Defs_HomeTileColor]">common/lock.png</texture>
                        <visible>[String.Contains(Container(9000).ListItem.Property(ParentalControl),yes) + !String.IsEqual(Skin.String(mypassword),Skin.String(passcode))]</visible>
                    </control>
                    <control type="label">
                        <top>188</top>
                        <height>78</height>
                        <width>170</width>
                        <align>center</align>
                        <aligny>center</aligny>
                        <font>Font-HomeMenu</font>                
                        <textcolor>$VAR[Defs_HomeTextColor]</textcolor>
                        <label>$INFO[ListItem.Label]</label>
                        <animation effect="slide" start="0" end="0,-12" time="100" reversible="false">Focus</animation>
                    </control>
                    <control type="image">
                        <centerleft>85</centerleft>
                        <bottom>0</bottom>
                        <width>16</width>
                        <height>16</height>
                        <aspectratio>stretch</aspectratio>
                        <texture colordiffuse="$VAR[Defs_HomeTileColor]">common/16-arrow-down.png</texture>
                        <visible>Integer.IsGreater(Container(9002).NumItems,0)</visible>
                        <animation effect="fade" start="0" end="100" time="300" delay="300" reversible="false">Focus</animation>
                    </control>
                    <control type="image">
                        <centerleft>85</centerleft>
                        <bottom>23</bottom>
                        <width>16</width>
                        <height>16</height>
                        <aspectratio>stretch</aspectratio>
                        <texture colordiffuse="$VAR[Defs_HomeTileColor]" flipy="true">common/16-arrow-down.png</texture>
						<visible>Integer.IsGreater(Container(9001).NumItems,0) + Skin.HasSetting(home.hidewidgetbox)</visible>
                        <animation effect="fade" start="0" end="100" time="300" delay="300" reversible="false">Focus</animation>
                    </control>					
                    <control type="image">
                        <bottom>16</bottom>
                        <width>170</width>
                        <height>6</height>
                        <texture colordiffuse="$VAR[Defs_HomeTileColor]">common/white.png</texture>
                        <aspectratio>scale</aspectratio>
                    </control>
                </focusedlayout>                                           
                <!-- Rounded Tiles -->
                <itemlayout width="188" height="266" condition="Skin.String(HomeStyle, rounded)">                    
                    <control type="image">
                        <top>16</top>
                        <width>196</width>
                        <height>170</height>
                        <texture colordiffuse="HomeBarTile">common/tile_rounded.png</texture>
                        <aspectratio>scale</aspectratio>
                        <visible>String.IsEmpty(ListItem.Property(tilecolor)) | !Skin.HasSetting(home.tilecolor.nofocus) | !Skin.HasSetting(home.tilecolor)</visible>
                    </control>
                    <control type="image">
                        <top>16</top>
                        <width>196</width>
                        <height>170</height>
                        <texture colordiffuse="$VAR[HighlightColor]">common/tile_rounded.png</texture>
                        <animation effect="fade" start="100" end="25" condition="true">Conditional</animation>
                        <aspectratio>scale</aspectratio>
                        <visible>String.IsEmpty(ListItem.Property(tilecolor)) + Skin.HasSetting(home.tilecolor.nofocus) + Skin.HasSetting(home.tilecolor)</visible>
                    </control>
                    <control type="image">
                        <top>16</top>
                        <width>196</width>
                        <height>170</height>
                        <animation effect="fade" start="100" end="25" condition="true">Conditional</animation>
                        <texture colordiffuse="HomeBarFG" diffuse="common/tile_rounded.png" aligny="center" align="center">special://skin/extras/colors/$INFO[ListItem.Property(tilecolor)].png</texture>
                        <aspectratio scalediffuse="false">scale</aspectratio>
                        <visible>!String.IsEmpty(ListItem.Property(tilecolor)) + Skin.HasSetting(home.tilecolor.nofocus) + Skin.HasSetting(home.tilecolor)</visible>
                    </control>
                    <control type="image">
                        <top>16</top>
                        <width>196</width>
                        <height>170</height>
                        <texture colordiffuse="HomeBarFG" diffuse="common/tile_rounded.png" aligny="center" align="center">$INFO[ListItem.Icon]</texture>
                        <aspectratio scalediffuse="false">center</aspectratio>
                        <animation effect="fade" start="50" end="50" condition="true">Conditional</animation>
                    </control>
                    <control type="label">
                        <top>188</top>
                        <height>78</height>
                        <left>12</left>
                        <width>172</width>
                        <align>center</align>
                        <aligny>center</aligny>
                        <font>Font-HomeMenu</font>
                        <textcolor>HomeBarFG</textcolor>
                        <label>$INFO[ListItem.Label]</label>
                        <animation effect="fade" start="50" end="50" condition="true">Conditional</animation>
                    </control>
                </itemlayout>
                <focusedlayout width="188" height="266" condition="Skin.String(HomeStyle, rounded)">
                    <control type="image">
                        <top>16</top>
                        <width>196</width>
                        <height>170</height>
                        <texture colordiffuse="$VAR[Defs_HomeTileColor]">common/tile_rounded.png</texture>
                        <aspectratio>scale</aspectratio>
                    </control>
                    <control type="image">
                        <top>16</top>
                        <width>196</width>
                        <height>170</height>
                        <texture colordiffuse="Selected" diffuse="common/tile_rounded.png" aligny="center" align="center">$INFO[ListItem.Icon]</texture>
                        <aspectratio scalediffuse="false">center</aspectratio>
                    </control>
                    <control type="image">
                        <centerleft>97</centerleft>
                        <bottom>90</bottom>
                        <width>22</width>
                        <height>22</height>
                        <aspectratio>stretch</aspectratio>
                        <texture colordiffuse="Selected">common/lock.png</texture>
                        <visible>[String.Contains(Container(9000).ListItem.Property(ParentalControl),yes) + !String.IsEqual(Skin.String(mypassword),Skin.String(passcode))]</visible>
                    </control>
                    <control type="label">
                        <left>12</left>
                        <top>188</top>
                        <height>78</height>
                        <width>172</width>
                        <align>center</align>
                        <aligny>center</aligny>
                        <font>Font-HomeMenu</font>            
                        <textcolor>$VAR[Defs_HomeTextColor]</textcolor>
                        <label>$INFO[ListItem.Label]</label>
                        <animation effect="slide" start="0" end="0,-12" time="100" reversible="false">Focus</animation>
                    </control>
                    <control type="image">
                        <centerleft>97</centerleft>
                        <bottom>0</bottom>
                        <width>16</width>
                        <height>16</height>
                        <aspectratio>stretch</aspectratio>
                        <texture colordiffuse="$VAR[Defs_HomeTileColor]">common/16-arrow-down.png</texture>
                        <visible>Integer.IsGreater(Container(9002).NumItems,0)</visible>
                        <animation effect="fade" start="0" end="100" time="300" delay="300" reversible="false">Focus</animation>
                    </control>
                    <control type="image">
                        <centerleft>97</centerleft>
                        <bottom>23</bottom>
                        <width>16</width>
                        <height>16</height>
                        <aspectratio>stretch</aspectratio>
                        <texture colordiffuse="$VAR[Defs_HomeTileColor]" flipy="true">common/16-arrow-down.png</texture>
						<visible>Integer.IsGreater(Container(9001).NumItems,0) + Skin.HasSetting(home.hidewidgetbox)</visible>
                        <animation effect="fade" start="0" end="100" time="300" delay="300" reversible="false">Focus</animation>
                    </control>					
                    <control type="image">
                        <left>12</left>
                        <bottom>17</bottom>
                        <width>172</width>
                        <height>6</height>
                        <texture colordiffuse="$VAR[Defs_HomeTileColor]">common/white.png</texture>
                        <aspectratio>scale</aspectratio>
                    </control>
                </focusedlayout>               
                <!-- Empty Rounded Tiles -->
                <itemlayout width="188" height="266" condition="Skin.String(HomeStyle, emptyrounded)">                    
                    <control type="image">
                        <top>16</top>
                        <width>196</width>
                        <height>170</height>
                        <texture colordiffuse="HomeBarTile">common/tile_emptyrounded.png</texture>
                        <aspectratio>scale</aspectratio>
                        <visible>String.IsEmpty(ListItem.Property(tilecolor)) | !Skin.HasSetting(home.tilecolor.nofocus) | !Skin.HasSetting(home.tilecolor)</visible>
                    </control>
                    <control type="image">
                        <top>16</top>
                        <width>196</width>
                        <height>170</height>
                        <texture colordiffuse="$VAR[HighlightColor]">common/tile_emptyrounded.png</texture>
                        <animation effect="fade" start="100" end="25" condition="true">Conditional</animation>
                        <aspectratio>scale</aspectratio>
                        <visible>String.IsEmpty(ListItem.Property(tilecolor)) + Skin.HasSetting(home.tilecolor.nofocus) + Skin.HasSetting(home.tilecolor)</visible>
                    </control>
                    <control type="image">
                        <top>16</top>
                        <width>196</width>
                        <height>170</height>
                        <animation effect="fade" start="100" end="25" condition="true">Conditional</animation>
                        <texture colordiffuse="HomeBarFG" diffuse="common/tile_emptyrounded.png" aligny="center" align="center">special://skin/extras/colors/$INFO[ListItem.Property(tilecolor)].png</texture>
                        <aspectratio scalediffuse="false">scale</aspectratio>
                        <visible>!String.IsEmpty(ListItem.Property(tilecolor)) + Skin.HasSetting(home.tilecolor.nofocus) + Skin.HasSetting(home.tilecolor)</visible>
                    </control>
                    <control type="image">
                        <top>16</top>
                        <width>196</width>
                        <height>170</height>
                        <texture colordiffuse="HomeBarFG" diffuse="common/tile_rounded.png" aligny="center" align="center">$INFO[ListItem.Icon]</texture>
                        <aspectratio scalediffuse="false">center</aspectratio>
                        <animation effect="fade" start="50" end="50" condition="true">Conditional</animation>
                    </control>
                    <control type="label">
                        <top>188</top>
                        <height>78</height>
                        <left>12</left>
                        <width>172</width>
                        <align>center</align>
                        <aligny>center</aligny>
                        <font>Font-HomeMenu</font>
                        <textcolor>HomeBarFG</textcolor>
                        <label>$INFO[ListItem.Label]</label>
                        <animation effect="fade" start="50" end="50" condition="true">Conditional</animation>
                    </control>
                </itemlayout>
                <focusedlayout width="188" height="266" condition="Skin.String(HomeStyle, emptyrounded)">
                    <control type="image">
                        <top>16</top>
                        <width>196</width>
                        <height>170</height>
                        <texture colordiffuse="$VAR[Defs_HomeTileColor]">common/tile_emptyrounded.png</texture>
                        <aspectratio>scale</aspectratio>
                    </control>
                    <control type="image">
                        <top>16</top>
                        <width>196</width>
                        <height>170</height>
                        <texture colordiffuse="$VAR[Defs_HomeTileColor]" diffuse="common/tile_rounded.png" aligny="center" align="center">$INFO[ListItem.Icon]</texture>
                        <aspectratio scalediffuse="false">center</aspectratio>
                    </control>
                    <control type="image">
                        <centerleft>97</centerleft>
                        <bottom>95</bottom>
                        <width>22</width>
                        <height>22</height>
                        <aspectratio>stretch</aspectratio>
                        <texture colordiffuse="$VAR[Defs_HomeTileColor]">common/lock.png</texture>
                        <visible>[String.Contains(Container(9000).ListItem.Property(ParentalControl),yes) + !String.IsEqual(Skin.String(mypassword),Skin.String(passcode))]</visible>
                    </control>
                    <control type="label">
                        <left>12</left>
                        <top>188</top>
                        <height>78</height>
                        <width>172</width>
                        <align>center</align>
                        <aligny>center</aligny>
                        <font>Font-HomeMenu</font>                
                        <textcolor>$VAR[Defs_HomeTextColor]</textcolor>
                        <label>$INFO[ListItem.Label]</label>
                        <animation effect="slide" start="0" end="0,-12" time="100" reversible="false">Focus</animation>
                    </control>
                    <control type="image">
                        <centerleft>97</centerleft>
                        <bottom>0</bottom>
                        <width>16</width>
                        <height>16</height>
                        <aspectratio>stretch</aspectratio>
                        <texture colordiffuse="$VAR[Defs_HomeTileColor]">common/16-arrow-down.png</texture>
                        <visible>Integer.IsGreater(Container(9002).NumItems,0)</visible>
                        <animation effect="fade" start="0" end="100" time="300" delay="300" reversible="false">Focus</animation>
                    </control>
                    <control type="image">
                        <centerleft>97</centerleft>
                        <bottom>23</bottom>
                        <width>16</width>
                        <height>16</height>
                        <aspectratio>stretch</aspectratio>
                        <texture colordiffuse="$VAR[Defs_HomeTileColor]" flipy="true">common/16-arrow-down.png</texture>
						<visible>Integer.IsGreater(Container(9001).NumItems,0) + Skin.HasSetting(home.hidewidgetbox)</visible>
                        <animation effect="fade" start="0" end="100" time="300" delay="300" reversible="false">Focus</animation>
                    </control>					
                    <control type="image">
                        <left>12</left>
                        <bottom>17</bottom>
                        <width>172</width>
                        <height>6</height>
                        <texture colordiffuse="$VAR[Defs_HomeTileColor]">common/white.png</texture>
                        <aspectratio>scale</aspectratio>
                    </control>
                </focusedlayout>            
                <!-- Squared Tiles -->
                <itemlayout width="188" height="266" condition="Skin.String(HomeStyle, squared)">                    
                    <control type="image">
                        <top>16</top>
                        <width>196</width>
                        <height>170</height>
                        <texture colordiffuse="HomeBarTile">common/tile_squared.png</texture>
                        <aspectratio>scale</aspectratio>
                        <visible>String.IsEmpty(ListItem.Property(tilecolor)) | !Skin.HasSetting(home.tilecolor.nofocus) | !Skin.HasSetting(home.tilecolor)</visible>
                    </control>
                    <control type="image">
                        <top>16</top>
                        <width>196</width>
                        <height>170</height>
                        <texture colordiffuse="$VAR[HighlightColor]">common/tile_squared.png</texture>
                        <animation effect="fade" start="100" end="25" condition="true">Conditional</animation>
                        <aspectratio>scale</aspectratio>
                        <visible>String.IsEmpty(ListItem.Property(tilecolor)) + Skin.HasSetting(home.tilecolor.nofocus) + Skin.HasSetting(home.tilecolor)</visible>
                    </control>
                    <control type="image">
                        <top>16</top>
                        <width>196</width>
                        <height>170</height>
                        <animation effect="fade" start="100" end="25" condition="true">Conditional</animation>
                        <texture colordiffuse="HomeBarFG" diffuse="common/tile_squared.png" aligny="center" align="center">special://skin/extras/colors/$INFO[ListItem.Property(tilecolor)].png</texture>
                        <aspectratio scalediffuse="false">scale</aspectratio>
                        <visible>!String.IsEmpty(ListItem.Property(tilecolor)) + Skin.HasSetting(home.tilecolor.nofocus) + Skin.HasSetting(home.tilecolor)</visible>
                    </control>
                    <control type="image">
                        <top>16</top>
                        <width>196</width>
                        <height>170</height>
                        <texture colordiffuse="HomeBarFG" diffuse="common/tile_squared.png" aligny="center" align="center">$INFO[ListItem.Icon]</texture>
                        <aspectratio scalediffuse="false">center</aspectratio>
                        <animation effect="fade" start="50" end="50" condition="true">Conditional</animation>
                    </control>
                    <control type="label">
                        <top>188</top>
                        <height>78</height>
                        <left>12</left>
                        <width>172</width>
                        <align>center</align>
                        <aligny>center</aligny>
                        <font>Font-HomeMenu</font>
                        <textcolor>HomeBarFG</textcolor>
                        <label>$INFO[ListItem.Label]</label>
                        <animation effect="fade" start="50" end="50" condition="true">Conditional</animation>
                    </control>
                </itemlayout>
                <focusedlayout width="188" height="266" condition="Skin.String(HomeStyle, squared)">
                    <control type="image">
                        <top>16</top>
                        <width>196</width>
                        <height>170</height>
                        <texture colordiffuse="$VAR[Defs_HomeTileColor]">common/tile_squared.png</texture>
                        <aspectratio>scale</aspectratio>
                    </control>
                    <control type="image">
                        <top>16</top>
                        <width>196</width>
                        <height>170</height>
                        <texture colordiffuse="Selected" diffuse="common/tile_squared.png" aligny="center" align="center">$INFO[ListItem.Icon]</texture>
                        <aspectratio scalediffuse="false">center</aspectratio>
                    </control>
                    <control type="image">
                        <centerleft>97</centerleft>
                        <bottom>90</bottom>
                        <width>22</width>
                        <height>22</height>
                        <aspectratio>stretch</aspectratio>
                        <texture colordiffuse="Selected">common/lock.png</texture>
                        <visible>[String.Contains(Container(9000).ListItem.Property(ParentalControl),yes) + !String.IsEqual(Skin.String(mypassword),Skin.String(passcode))]</visible>
                    </control>
                    <control type="label">
                        <left>12</left>
                        <top>188</top>
                        <height>78</height>
                        <width>172</width>
                        <align>center</align>
                        <aligny>center</aligny>
                        <font>Font-HomeMenu</font>                   
                        <textcolor>$VAR[Defs_HomeTextColor]</textcolor>
                        <label>$INFO[ListItem.Label]</label>
                        <animation effect="slide" start="0" end="0,-12" time="100" reversible="false">Focus</animation>
                    </control>
                    <control type="image">
                        <centerleft>97</centerleft>
                        <bottom>0</bottom>
                        <width>16</width>
                        <height>16</height>
                        <aspectratio>stretch</aspectratio>
                        <texture colordiffuse="$VAR[Defs_HomeTileColor]">common/16-arrow-down.png</texture>
                        <visible>Integer.IsGreater(Container(9002).NumItems,0)</visible>
                        <animation effect="fade" start="0" end="100" time="300" delay="300" reversible="false">Focus</animation>
                    </control>
                    <control type="image">
                        <centerleft>97</centerleft>
                        <bottom>23</bottom>
                        <width>16</width>
                        <height>16</height>
                        <aspectratio>stretch</aspectratio>
                        <texture colordiffuse="$VAR[Defs_HomeTileColor]" flipy="true">common/16-arrow-down.png</texture>
						<visible>Integer.IsGreater(Container(9001).NumItems,0) + Skin.HasSetting(home.hidewidgetbox)</visible>
                        <animation effect="fade" start="0" end="100" time="300" delay="300" reversible="false">Focus</animation>
                    </control>					
                    <control type="image">
                        <left>12</left>
                        <bottom>17</bottom>
                        <width>172</width>
                        <height>6</height>
                        <texture colordiffuse="$VAR[Defs_HomeTileColor]">common/white.png</texture>
                        <aspectratio>scale</aspectratio>
                    </control>
                </focusedlayout>     
                <!-- Empty Squared Tiles -->
                <itemlayout width="188" height="266" condition="Skin.String(HomeStyle, emptysquared)">                    
                    <control type="image">
                        <top>16</top>
                        <width>196</width>
                        <height>170</height>
                        <texture colordiffuse="HomeBarTile">common/tile_emptysquared.png</texture>
                        <aspectratio>scale</aspectratio>
                        <visible>String.IsEmpty(ListItem.Property(tilecolor)) | !Skin.HasSetting(home.tilecolor.nofocus) | !Skin.HasSetting(home.tilecolor)</visible>
                    </control>
                    <control type="image">
                        <top>16</top>
                        <width>196</width>
                        <height>170</height>
                        <texture colordiffuse="$VAR[HighlightColor]">common/tile_emptysquared.png</texture>
                        <animation effect="fade" start="100" end="25" condition="true">Conditional</animation>
                        <aspectratio>scale</aspectratio>
                        <visible>String.IsEmpty(ListItem.Property(tilecolor)) + Skin.HasSetting(home.tilecolor.nofocus) + Skin.HasSetting(home.tilecolor)</visible>
                    </control>
                    <control type="image">
                        <top>16</top>
                        <width>196</width>
                        <height>170</height>
                        <animation effect="fade" start="100" end="25" condition="true">Conditional</animation>
                        <texture colordiffuse="HomeBarFG" diffuse="common/tile_emptysquared.png" aligny="center" align="center">special://skin/extras/colors/$INFO[ListItem.Property(tilecolor)].png</texture>
                        <aspectratio scalediffuse="false">scale</aspectratio>
                        <visible>!String.IsEmpty(ListItem.Property(tilecolor)) + Skin.HasSetting(home.tilecolor.nofocus) + Skin.HasSetting(home.tilecolor)</visible>
                    </control>
                    <control type="image">
                        <top>16</top>
                        <width>196</width>
                        <height>170</height>
                        <texture colordiffuse="HomeBarFG" diffuse="common/tile_squared.png" aligny="center" align="center">$INFO[ListItem.Icon]</texture>
                        <aspectratio scalediffuse="false">center</aspectratio>
                        <animation effect="fade" start="50" end="50" condition="true">Conditional</animation>
                    </control>
                    <control type="label">
                        <top>188</top>
                        <height>78</height>
                        <left>12</left>
                        <width>172</width>
                        <align>center</align>
                        <aligny>center</aligny>
                        <font>Font-HomeMenu</font>
                        <textcolor>HomeBarFG</textcolor>
                        <label>$INFO[ListItem.Label]</label>
                        <animation effect="fade" start="50" end="50" condition="true">Conditional</animation>
                    </control>
                </itemlayout>
                <focusedlayout width="188" height="266" condition="Skin.String(HomeStyle, emptysquared)">
                    <control type="image">
                        <top>16</top>
                        <width>196</width>
                        <height>170</height>
                        <texture colordiffuse="$VAR[Defs_HomeTileColor]">common/tile_emptysquared.png</texture>
                        <aspectratio>scale</aspectratio>
                    </control>
                    <control type="image">
                        <top>16</top>
                        <width>196</width>
                        <height>170</height>
                        <texture colordiffuse="$VAR[Defs_HomeTileColor]" diffuse="common/tile_squared.png" aligny="center" align="center">$INFO[ListItem.Icon]</texture>
                        <aspectratio scalediffuse="false">center</aspectratio>
                    </control>
                    <control type="image">
                        <centerleft>97</centerleft>
                        <bottom>95</bottom>
                        <width>22</width>
                        <height>22</height>
                        <aspectratio>stretch</aspectratio>
                        <texture colordiffuse="$VAR[Defs_HomeTileColor]">common/lock.png</texture>
                        <visible>[String.Contains(Container(9000).ListItem.Property(ParentalControl),yes) + !String.IsEqual(Skin.String(mypassword),Skin.String(passcode))]</visible>
                    </control>
                    <control type="label">
                        <left>12</left>
                        <top>188</top>
                        <height>78</height>
                        <width>172</width>
                        <align>center</align>
                        <aligny>center</aligny>
                        <font>Font-HomeMenu</font>                
                        <textcolor>$VAR[Defs_HomeTextColor]</textcolor>
                        <label>$INFO[ListItem.Label]</label>
                        <animation effect="slide" start="0" end="0,-12" time="100" reversible="false">Focus</animation>
                    </control>
                    <control type="image">
                        <centerleft>97</centerleft>
                        <bottom>0</bottom>
                        <width>16</width>
                        <height>16</height>
                        <aspectratio>stretch</aspectratio>
                        <texture colordiffuse="$VAR[Defs_HomeTileColor]">common/16-arrow-down.png</texture>
                        <visible>Integer.IsGreater(Container(9002).NumItems,0)</visible>
                        <animation effect="fade" start="0" end="100" time="300" delay="300" reversible="false">Focus</animation>
                    </control>
                    <control type="image">
                        <centerleft>97</centerleft>
                        <bottom>23</bottom>
                        <width>16</width>
                        <height>16</height>
                        <aspectratio>stretch</aspectratio>
                        <texture colordiffuse="$VAR[Defs_HomeTileColor]" flipy="true">common/16-arrow-down.png</texture>
						<visible>Integer.IsGreater(Container(9001).NumItems,0) + Skin.HasSetting(home.hidewidgetbox)</visible>
                        <animation effect="fade" start="0" end="100" time="300" delay="300" reversible="false">Focus</animation>
                    </control>					
                    <control type="image">
                        <left>12</left>
                        <bottom>17</bottom>
                        <width>172</width>
                        <height>6</height>
                        <texture colordiffuse="$VAR[Defs_HomeTileColor]">common/white.png</texture>
                        <aspectratio>scale</aspectratio>
                    </control>
                </focusedlayout>               
                <!-- Circle Tiles -->
                <itemlayout width="188" height="266" condition="Skin.String(HomeStyle, circle)">                    
                    <control type="image">
                        <top>16</top>
                        <width>196</width>
                        <height>170</height>
                        <texture colordiffuse="HomeBarTile">common/tile_circle.png</texture>
                        <aspectratio>scale</aspectratio>
                        <visible>String.IsEmpty(ListItem.Property(tilecolor)) | !Skin.HasSetting(home.tilecolor.nofocus) | !Skin.HasSetting(home.tilecolor)</visible>
                    </control>
                    <control type="image">
                        <top>16</top>
                        <width>196</width>
                        <height>170</height>
                        <texture colordiffuse="$VAR[HighlightColor]">common/tile_circle.png</texture>
                        <animation effect="fade" start="100" end="25" condition="true">Conditional</animation>
                        <aspectratio>scale</aspectratio>
                        <visible>String.IsEmpty(ListItem.Property(tilecolor)) + Skin.HasSetting(home.tilecolor.nofocus) + Skin.HasSetting(home.tilecolor)</visible>
                    </control>
                    <control type="image">
                        <top>16</top>
                        <width>196</width>
                        <height>170</height>
                        <animation effect="fade" start="100" end="25" condition="true">Conditional</animation>
                        <texture colordiffuse="HomeBarFG" diffuse="common/tile_circle.png" aligny="center" align="center">special://skin/extras/colors/$INFO[ListItem.Property(tilecolor)].png</texture>
                        <aspectratio scalediffuse="false">scale</aspectratio>
                        <visible>!String.IsEmpty(ListItem.Property(tilecolor)) + Skin.HasSetting(home.tilecolor.nofocus) + Skin.HasSetting(home.tilecolor)</visible>
                    </control>
                    <control type="image">
                        <top>16</top>
                        <width>196</width>
                        <height>170</height>
                        <texture colordiffuse="HomeBarFG" diffuse="common/tile_circle.png" aligny="center" align="center">$INFO[ListItem.Icon]</texture>
                        <aspectratio scalediffuse="false">center</aspectratio>
                        <animation effect="fade" start="50" end="50" condition="true">Conditional</animation>
                    </control>
                    <control type="label">
                        <top>188</top>
                        <height>78</height>
                        <left>12</left>
                        <width>172</width>
                        <align>center</align>
                        <aligny>center</aligny>
                        <font>Font-HomeMenu</font>
                        <textcolor>HomeBarFG</textcolor>
                        <label>$INFO[ListItem.Label]</label>
                        <animation effect="fade" start="50" end="50" condition="true">Conditional</animation>
                    </control>
                </itemlayout>
                <focusedlayout width="188" height="266" condition="Skin.String(HomeStyle, circle)">
                    <control type="image">
                        <top>16</top>
                        <width>196</width>
                        <height>170</height>
                        <texture colordiffuse="$VAR[Defs_HomeTileColor]">common/tile_circle.png</texture>
                        <aspectratio>scale</aspectratio>
                    </control>
                    <control type="image">
                        <top>16</top>
                        <width>196</width>
                        <height>170</height>
                        <texture colordiffuse="Selected" diffuse="common/tile_circle.png" aligny="center" align="center">$INFO[ListItem.Icon]</texture>
                        <aspectratio scalediffuse="false">center</aspectratio>
                    </control>
                    <control type="image">
                        <centerleft>97</centerleft>
                        <bottom>90</bottom>
                        <width>22</width>
                        <height>22</height>
                        <aspectratio>stretch</aspectratio>
                        <texture colordiffuse="Selected">common/lock.png</texture>
                        <visible>[String.Contains(Container(9000).ListItem.Property(ParentalControl),yes) + !String.IsEqual(Skin.String(mypassword),Skin.String(passcode))]</visible>
                    </control>
                    <control type="label">
                        <left>12</left>
                        <top>188</top>
                        <height>78</height>
                        <width>172</width>
                        <align>center</align>
                        <aligny>center</aligny>
                        <font>Font-HomeMenu</font>                
                        <textcolor>$VAR[Defs_HomeTextColor]</textcolor>
                        <label>$INFO[ListItem.Label]</label>
                        <animation effect="slide" start="0" end="0,-12" time="100" reversible="false">Focus</animation>
                    </control>
                    <control type="image">
                        <centerleft>97</centerleft>
                        <bottom>0</bottom>
                        <width>16</width>
                        <height>16</height>
                        <aspectratio>stretch</aspectratio>
                        <texture colordiffuse="$VAR[Defs_HomeTileColor]">common/16-arrow-down.png</texture>
                        <visible>Integer.IsGreater(Container(9002).NumItems,0)</visible>
                        <animation effect="fade" start="0" end="100" time="300" delay="300" reversible="false">Focus</animation>
                    </control>
                    <control type="image">
                        <centerleft>97</centerleft>
                        <bottom>23</bottom>
                        <width>16</width>
                        <height>16</height>
                        <aspectratio>stretch</aspectratio>
                        <texture colordiffuse="$VAR[Defs_HomeTileColor]" flipy="true">common/16-arrow-down.png</texture>
						<visible>Integer.IsGreater(Container(9001).NumItems,0) + Skin.HasSetting(home.hidewidgetbox)</visible>
                        <animation effect="fade" start="0" end="100" time="300" delay="300" reversible="false">Focus</animation>
                    </control>					
                    <control type="image">
                        <left>12</left>
                        <bottom>17</bottom>
                        <width>172</width>
                        <height>6</height>
                        <texture colordiffuse="$VAR[Defs_HomeTileColor]">common/white.png</texture>
                        <aspectratio>scale</aspectratio>
                    </control>
                </focusedlayout>            
                <!-- Empty Circle Tiles -->
                <itemlayout width="188" height="266" condition="Skin.String(HomeStyle, emptycircle)">                    
                    <control type="image">
                        <top>16</top>
                        <width>196</width>
                        <height>170</height>
                        <texture colordiffuse="HomeBarTile">common/tile_emptycircle.png</texture>
                        <aspectratio>scale</aspectratio>
                        <visible>String.IsEmpty(ListItem.Property(tilecolor)) | !Skin.HasSetting(home.tilecolor.nofocus) | !Skin.HasSetting(home.tilecolor)</visible>
                    </control>
                    <control type="image">
                        <top>16</top>
                        <width>196</width>
                        <height>170</height>
                        <texture colordiffuse="$VAR[HighlightColor]">common/tile_emptycircle.png</texture>
                        <animation effect="fade" start="100" end="25" condition="true">Conditional</animation>
                        <aspectratio>scale</aspectratio>
                        <visible>String.IsEmpty(ListItem.Property(tilecolor)) + Skin.HasSetting(home.tilecolor.nofocus) + Skin.HasSetting(home.tilecolor)</visible>
                    </control>
                    <control type="image">
                        <top>16</top>
                        <width>196</width>
                        <height>170</height>
                        <animation effect="fade" start="100" end="25" condition="true">Conditional</animation>
                        <texture colordiffuse="HomeBarFG" diffuse="common/tile_emptycircle.png" aligny="center" align="center">special://skin/extras/colors/$INFO[ListItem.Property(tilecolor)].png</texture>
                        <aspectratio scalediffuse="false">scale</aspectratio>
                        <visible>!String.IsEmpty(ListItem.Property(tilecolor)) + Skin.HasSetting(home.tilecolor.nofocus) + Skin.HasSetting(home.tilecolor)</visible>
                    </control>
                    <control type="image">
                        <top>16</top>
                        <width>196</width>
                        <height>170</height>
                        <texture colordiffuse="HomeBarFG" diffuse="common/tile_circle.png" aligny="center" align="center">$INFO[ListItem.Icon]</texture>
                        <aspectratio scalediffuse="false">center</aspectratio>
                        <animation effect="fade" start="50" end="50" condition="true">Conditional</animation>
                    </control>
                    <control type="label">
                        <top>188</top>
                        <height>78</height>
                        <left>12</left>
                        <width>172</width>
                        <align>center</align>
                        <aligny>center</aligny>
                        <font>Font-HomeMenu</font>
                        <textcolor>HomeBarFG</textcolor>
                        <label>$INFO[ListItem.Label]</label>
                        <animation effect="fade" start="50" end="50" condition="true">Conditional</animation>
                    </control>
                </itemlayout>
                <focusedlayout width="188" height="266" condition="Skin.String(HomeStyle, emptycircle)">
                    <control type="image">
                        <top>16</top>
                        <width>196</width>
                        <height>170</height>
                        <texture colordiffuse="$VAR[Defs_HomeTileColor]">common/tile_emptycircle.png</texture>
                        <aspectratio>scale</aspectratio>
                    </control>
                    <control type="image">
                        <top>16</top>
                        <width>196</width>
                        <height>170</height>
                        <texture colordiffuse="$VAR[Defs_HomeTileColor]" diffuse="common/tile_circle.png" aligny="center" align="center">$INFO[ListItem.Icon]</texture>
                        <aspectratio scalediffuse="false">center</aspectratio>
                    </control>
                    <control type="image">
                        <centerleft>97</centerleft>
                        <bottom>95</bottom>
                        <width>22</width>
                        <height>22</height>
                        <aspectratio>stretch</aspectratio>
                        <texture colordiffuse="$VAR[Defs_HomeTileColor]">common/lock.png</texture>
                        <visible>[String.Contains(Container(9000).ListItem.Property(ParentalControl),yes) + !String.IsEqual(Skin.String(mypassword),Skin.String(passcode))]</visible>
                    </control>
                    <control type="label">
                        <left>12</left>
                        <top>188</top>
                        <height>78</height>
                        <width>172</width>
                        <align>center</align>
                        <aligny>center</aligny>
                        <font>Font-HomeMenu</font>                
                        <textcolor>$VAR[Defs_HomeTextColor]</textcolor>
                        <label>$INFO[ListItem.Label]</label>
                        <animation effect="slide" start="0" end="0,-12" time="100" reversible="false">Focus</animation>
                    </control>
                    <control type="image">
                        <centerleft>97</centerleft>
                        <bottom>0</bottom>
                        <width>16</width>
                        <height>16</height>
                        <aspectratio>stretch</aspectratio>
                        <texture colordiffuse="$VAR[Defs_HomeTileColor]">common/16-arrow-down.png</texture>
                        <visible>Integer.IsGreater(Container(9002).NumItems,0)</visible>
                        <animation effect="fade" start="0" end="100" time="300" delay="300" reversible="false">Focus</animation>
                    </control>
                    <control type="image">
                        <centerleft>97</centerleft>
                        <bottom>23</bottom>
                        <width>16</width>
                        <height>16</height>
                        <aspectratio>stretch</aspectratio>
                        <texture colordiffuse="$VAR[Defs_HomeTileColor]" flipy="true">common/16-arrow-down.png</texture>
						<visible>Integer.IsGreater(Container(9001).NumItems,0) + Skin.HasSetting(home.hidewidgetbox)</visible>
                        <animation effect="fade" start="0" end="100" time="300" delay="300" reversible="false">Focus</animation>
                    </control>					
                    <control type="image">
                        <left>12</left>
                        <bottom>17</bottom>
                        <width>172</width>
                        <height>6</height>
                        <texture colordiffuse="$VAR[Defs_HomeTileColor]">common/white.png</texture>
                        <aspectratio>scale</aspectratio>
                    </control>
                </focusedlayout>               
                <!-- Only Icons -->
                <itemlayout width="188" height="266" condition="Skin.String(HomeStyle, iconsonly)">                    
                    <control type="image">
                        <top>16</top>
                        <width>196</width>
                        <height>170</height>
                        <texture colordiffuse="HomeBarFG" diffuse="common/tile_circle.png" aligny="center" align="center">$INFO[ListItem.Icon]</texture>
                        <aspectratio scalediffuse="false">center</aspectratio>
                        <animation effect="fade" start="50" end="50" condition="true">Conditional</animation>
                    </control>
                    <control type="label">
                        <top>188</top>
                        <height>78</height>
                        <left>12</left>
                        <width>172</width>
                        <align>center</align>
                        <aligny>center</aligny>
                        <font>Font-HomeMenu</font>
                        <textcolor>HomeBarFG</textcolor>
                        <label>$INFO[ListItem.Label]</label>
                        <animation effect="fade" start="50" end="50" condition="true">Conditional</animation>
                    </control>
                </itemlayout>
                <focusedlayout width="188" height="266" condition="Skin.String(HomeStyle, iconsonly)">
                    <control type="image">
                        <top>16</top>
                        <width>196</width>
                        <height>170</height>
                        <texture colordiffuse="$VAR[Defs_HomeTileColor]" diffuse="common/tile_circle.png" aligny="center" align="center">$INFO[ListItem.Icon]</texture>
                        <aspectratio scalediffuse="false">center</aspectratio>
                    </control>
                    <control type="image">
                        <centerleft>97</centerleft>
                        <bottom>95</bottom>
                        <width>22</width>
                        <height>22</height>
                        <aspectratio>stretch</aspectratio>
                        <texture colordiffuse="$VAR[Defs_HomeTileColor]">common/lock.png</texture>
                        <visible>[String.Contains(Container(9000).ListItem.Property(ParentalControl),yes) + !String.IsEqual(Skin.String(mypassword),Skin.String(passcode))]</visible>
                    </control>
                    <control type="label">
                        <left>12</left>
                        <top>188</top>
                        <height>78</height>
                        <width>172</width>
                        <align>center</align>
                        <aligny>center</aligny>
                        <font>Font-HomeMenu</font>                
                        <textcolor>$VAR[Defs_HomeTextColor]</textcolor>
                        <label>$INFO[ListItem.Label]</label>
                        <animation effect="slide" start="0" end="0,-12" time="100" reversible="false">Focus</animation>
                    </control>
                    <control type="image">
                        <centerleft>97</centerleft>
                        <bottom>0</bottom>
                        <width>16</width>
                        <height>16</height>
                        <aspectratio>stretch</aspectratio>
                        <texture colordiffuse="$VAR[Defs_HomeTileColor]">common/16-arrow-down.png</texture>
                        <visible>Integer.IsGreater(Container(9002).NumItems,0)</visible>
                        <animation effect="fade" start="0" end="100" time="300" delay="300" reversible="false">Focus</animation>
                    </control>
                    <control type="image">
                        <centerleft>97</centerleft>
                        <bottom>23</bottom>
                        <width>16</width>
                        <height>16</height>
                        <aspectratio>stretch</aspectratio>
                        <texture colordiffuse="$VAR[Defs_HomeTileColor]" flipy="true">common/16-arrow-down.png</texture>
						<visible>Integer.IsGreater(Container(9001).NumItems,0) + Skin.HasSetting(home.hidewidgetbox)</visible>
                        <animation effect="fade" start="0" end="100" time="300" delay="300" reversible="false">Focus</animation>
                    </control>					
                    <control type="image">
                        <left>12</left>
                        <bottom>17</bottom>
                        <width>172</width>
                        <height>6</height>
                        <texture colordiffuse="$VAR[Defs_HomeTileColor]">common/white.png</texture>
                        <aspectratio>scale</aspectratio>
                    </control>
                </focusedlayout>
                <!-- Tile in Text -->
                <itemlayout width="188" height="266" condition="Skin.String(HomeStyle, textintile)">
                    <control type="image">
                        <top>16</top>
                        <width>196</width>
                        <height>170</height>
                        <texture colordiffuse="HomeBarTile">common/tile.png</texture>
                        <aspectratio>keep</aspectratio>
                        <visible>String.IsEmpty(ListItem.Property(tilecolor)) | !Skin.HasSetting(home.tilecolor.nofocus) | !Skin.HasSetting(home.tilecolor)</visible>
                    </control>
                    <control type="image">
                        <top>16</top>
                        <width>196</width>
                        <height>170</height>
                        <texture colordiffuse="$VAR[HighlightColor]">common/tile.png</texture>
                        <animation effect="fade" start="100" end="25" condition="true">Conditional</animation>
                        <aspectratio>keep</aspectratio>
                        <visible>String.IsEmpty(ListItem.Property(tilecolor)) + Skin.HasSetting(home.tilecolor.nofocus) + Skin.HasSetting(home.tilecolor)</visible>
                    </control>
                    <control type="image">
                        <top>16</top>
                        <width>196</width>
                        <height>170</height>
                        <animation effect="fade" start="100" end="25" condition="true">Conditional</animation>
                        <texture colordiffuse="HomeBarFG" diffuse="common/tile.png" aligny="center" align="center">special://skin/extras/colors/$INFO[ListItem.Property(tilecolor)].png</texture>
                        <aspectratio scalediffuse="false">stretch</aspectratio>
                        <visible>!String.IsEmpty(ListItem.Property(tilecolor)) + Skin.HasSetting(home.tilecolor.nofocus) + Skin.HasSetting(home.tilecolor)</visible>
                    </control>
                    <control type="image">
                        <top>-6</top>
                        <width>196</width>
                        <height>170</height>
                        <texture colordiffuse="HomeBarFG" diffuse="common/tile.png" aligny="center" align="center">$INFO[ListItem.Icon]</texture>
                        <aspectratio scalediffuse="false">center</aspectratio>
                        <animation effect="fade" start="50" end="50" condition="true">Conditional</animation>
                        <visible>String.StartsWith(ListItem.Icon,special://skin/extras/icons/)</visible>
                    </control>
                    <control type="image">
                        <top>16</top>
                        <width>196</width>
                        <height>170</height>
                        <texture colordiffuse="HomeBarFG" diffuse="common/tile.png" aligny="center" align="center">$INFO[ListItem.Icon]</texture>
                        <aspectratio scalediffuse="false">center</aspectratio>
                        <animation effect="fade" start="50" end="50" condition="true">Conditional</animation>
                        <visible>!String.StartsWith(ListItem.Icon,special://skin/extras/icons/)</visible>
                    </control>
                    <control type="label">
                        <top>120</top>
                        <height>78</height>
                        <left>8</left>
                        <width>160</width>
                        <align>center</align>
                        <aligny>center</aligny>
                        <font>Font-HomeMenu</font>
                        <textcolor>HomeBarFG</textcolor>
                        <label>$INFO[ListItem.Label]</label>
                        <animation effect="fade" start="50" end="50" condition="true">Conditional</animation>
                    </control>
                </itemlayout>
                <focusedlayout width="188" height="266" condition="Skin.String(HomeStyle, textintile)">
                    <control type="image">
                        <top>16</top>
                        <width>196</width>
                        <height>170</height>
                        <texture colordiffuse="$VAR[Defs_HomeTileColor]">common/tile.png</texture>
                        <aspectratio>keep</aspectratio>
                    </control>
                    <control type="image">
                        <top>-6</top>
                        <width>196</width>
                        <height>170</height>
                        <texture colordiffuse="Selected" diffuse="common/tile.png" aligny="center" align="center">$INFO[ListItem.Icon]</texture>
                        <aspectratio scalediffuse="false">center</aspectratio>
                        <visible>String.StartsWith(ListItem.Icon,special://skin/extras/icons/)</visible>
                    </control>
                    <control type="image">
                        <top>16</top>
                        <width>196</width>
                        <height>170</height>
                        <texture colordiffuse="Selected" diffuse="common/tile.png" aligny="center" align="center">$INFO[ListItem.Icon]</texture>
                        <aspectratio scalediffuse="false">center</aspectratio>
                        <visible>!String.StartsWith(ListItem.Icon,special://skin/extras/icons/)</visible>
                    </control>
                    <control type="label">
                        <top>120</top>
                        <left>8</left>
                        <height>78</height>
                        <width>160</width>
                        <align>center</align>
                        <aligny>center</aligny>
                        <font>Font-HomeMenu</font>                      
                        <textcolor>$VAR[Defs_HomeTextColor]</textcolor>
                        <label>$INFO[ListItem.Label]</label>
                    </control>
                    <control type="image">
                        <centerleft>85</centerleft>
                        <bottom>56</bottom>
                        <width>16</width>
                        <height>16</height>
                        <aspectratio>stretch</aspectratio>
                        <texture colordiffuse="$VAR[Defs_HomeTileColor]">common/16-arrow-down.png</texture>
                        <visible>Integer.IsGreater(Container(9002).NumItems,0)</visible>
                        <visible>![String.Contains(Container(9000).ListItem.Property(ParentalControl),yes) + !String.IsEqual(Skin.String(mypassword),Skin.String(passcode))]</visible>
                        <animation effect="fade" start="0" end="100" time="300" delay="300" reversible="false">Focus</animation>
                    </control>
                    <control type="image">
                        <centerleft>105</centerleft>
                        <top>15</top>
                        <width>16</width>
                        <height>16</height>
                        <aspectratio>stretch</aspectratio>
                        <texture colordiffuse="DialogBG" flipy="true">common/16-arrow-down.png</texture>
						<visible>Integer.IsGreater(Container(9001).NumItems,0) + Skin.HasSetting(home.hidewidgetbox)</visible>
                        <animation effect="fade" start="0" end="100" time="300" delay="300" reversible="false">Focus</animation>
                    </control>					
                    <control type="image">
                        <centerleft>85</centerleft>
                        <bottom>53</bottom>
                        <width>22</width>
                        <height>22</height>
                        <aspectratio>stretch</aspectratio>
                        <texture colordiffuse="$VAR[Defs_HomeTileColor]">common/lock.png</texture>
                        <visible>Integer.IsGreater(Container(9002).NumItems,0)</visible>
                        <animation effect="fade" start="0" end="100" time="300" delay="300" reversible="false">Focus</animation>
                        <visible>[String.Contains(Container(9000).ListItem.Property(ParentalControl),yes) + !String.IsEqual(Skin.String(mypassword),Skin.String(passcode))]</visible>
                    </control>
                </focusedlayout>
                <!-- Text Only -->
                <itemlayout width="188" height="266" condition="Skin.String(HomeStyle, textonly)">
                    <control type="label">
                        <top>16</top>
                        <height>78</height>
                        <width>170</width>
                        <align>center</align>
                        <aligny>center</aligny>
                        <font>Font-HomeMenu</font>
                        <textcolor>HomeBarFG</textcolor>
                        <label>$INFO[ListItem.Label]</label>
                        <animation effect="fade" start="50" end="50" condition="true">Conditional</animation>
                    </control>
                </itemlayout>
                <focusedlayout width="188" height="266" condition="Skin.String(HomeStyle, textonly)">
                    <control type="label">
                        <top>16</top>
                        <height>78</height>
                        <width>170</width>
                        <align>center</align>
                        <aligny>center</aligny>
                        <font>Font-HomeMenu</font>                      
                        <textcolor>$VAR[Defs_HomeTextColor]</textcolor>
                        <label>$INFO[ListItem.Label]</label>
                        <animation effect="slide" start="0" end="0,-12" time="100" reversible="false">Focus</animation>
                    </control>
                    <control type="image">
                        <centerleft>85</centerleft>
                        <top>88</top>
                        <width>16</width>
                        <height>16</height>
                        <aspectratio>stretch</aspectratio>
                        <texture colordiffuse="$VAR[Defs_HomeTileColor]">common/16-arrow-down.png</texture>
                        <visible>Integer.IsGreater(Container(9002).NumItems,0)</visible>
                        <animation effect="fade" start="0" end="100" time="300" delay="300" reversible="false">Focus</animation>
                        <visible>![String.Contains(Container(9000).ListItem.Property(ParentalControl),yes) + !String.IsEqual(Skin.String(mypassword),Skin.String(passcode))]</visible>
                    </control>					
                    <control type="image">
                        <centerleft>85</centerleft>
                        <top>3</top>
                        <width>22</width>
                        <height>22</height>
                        <aspectratio>stretch</aspectratio>
                        <texture colordiffuse="$VAR[Defs_HomeTileColor]">common/lock.png</texture>
                        <visible>Integer.IsGreater(Container(9002).NumItems,0)</visible>
                        <animation effect="fade" start="0" end="100" time="300" delay="300" reversible="false">Focus</animation>
                        <visible>[String.Contains(Container(9000).ListItem.Property(ParentalControl),yes) + !String.IsEqual(Skin.String(mypassword),Skin.String(passcode))]</visible>
                    </control>
                    <control type="image">
                        <top>80</top>
                        <width>170</width>
                        <height>6</height>
                        <texture colordiffuse="$VAR[Defs_HomeTileColor]">common/white.png</texture>
                        <aspectratio>scale</aspectratio>
                    </control>
                    <control type="image">
                        <centerleft>85</centerleft>
                        <top>62</top>
                        <width>16</width>
                        <height>16</height>
                        <aspectratio>stretch</aspectratio>
                        <texture colordiffuse="$VAR[Defs_HomeTileColor]" flipy="true">common/16-arrow-down.png</texture>
                        <visible>Integer.IsGreater(Container(9001).NumItems,0) + Skin.HasSetting(home.hidewidgetbox)</visible>
                        <animation effect="fade" start="0" end="100" time="300" delay="300" reversible="false">Focus</animation>
                        <visible>![String.Contains(Container(9000).ListItem.Property(ParentalControl),yes) + !String.IsEqual(Skin.String(mypassword),Skin.String(passcode))]</visible>
                    </control>					
                </focusedlayout>
                <content>
                    <include>skinshortcuts-mainmenu</include>
                </content>
            </control>
            <!-- Arrows -->
            <control type="group">
                <visible>Container(9000).HasNext | Container(9000).HasPrevious</visible>                
                <visible>!Skin.String(HomeStyle, textonly) + !Skin.String(HomeStyle, rounded) + !Skin.String(HomeStyle, emptyrounded) + !Skin.String(HomeStyle, squared) + !Skin.String(HomeStyle, emptysquared) + !Skin.String(HomeStyle, emptybeveled) + !Skin.String(HomeStyle, beveled) + !Skin.String(HomeStyle, textintile) + !Skin.String(HomeStyle, vertical)</visible>
                <left>0</left>
                <right>0</right>
                <bottom>0</bottom>
                <height>266</height>
                <control type="image">
                    <centertop>45</centertop>
                    <left>8</left>
                    <width>16</width>
                    <height>16</height>
                    <texture colordiffuse="ListLabel">common/16-arrow-left.png</texture>
                </control>
                <control type="image">
                    <centertop>160</centertop>
                    <right>8</right>
                    <width>16</width>
                    <height>16</height>
                    <texture colordiffuse="ListLabel" flipx="true">common/16-arrow-left.png</texture>
                </control>
            </control>
            <control type="group">
                <visible>Container(9000).HasNext | Container(9000).HasPrevious</visible>               
                <visible>Skin.String(HomeStyle, rounded) | Skin.String(HomeStyle, emptyrounded) | Skin.String(HomeStyle, squared) | Skin.String(HomeStyle, emptysquared) | Skin.String(HomeStyle, emptybeveled) | Skin.String(HomeStyle, beveled) | Skin.String(HomeStyle, textintile)</visible>
                <left>0</left>
                <right>0</right>
                <bottom>0</bottom>
                <height>266</height>
                <control type="image">
                    <centertop>100</centertop>
                    <left>8</left>
                    <width>16</width>
                    <height>16</height>
                    <texture colordiffuse="ListLabel">common/16-arrow-left.png</texture>
                </control>
                <control type="image">
                    <centertop>100</centertop>
                    <right>8</right>
                    <width>16</width>
                    <height>16</height>
                    <texture colordiffuse="ListLabel" flipx="true">common/16-arrow-left.png</texture>
                </control>
            </control>            
            <control type="group">
                <visible>Container(9000).HasNext | Container(9000).HasPrevious</visible>               
                <visible>Skin.String(HomeStyle, textonly)</visible>
                <left>0</left>
                <right>0</right>
                <bottom>0</bottom>
                <height>266</height>
                <control type="image">
                    <bottom>40</bottom>
                    <left>7</left>
                    <width>16</width>
                    <height>16</height>
                    <texture colordiffuse="ListLabel">common/16-arrow-left.png</texture>
                </control>
                <control type="image">
                    <bottom>40</bottom>
                    <right>7</right>
                    <width>16</width>
                    <height>16</height>
                    <texture colordiffuse="ListLabel" flipx="true">common/16-arrow-left.png</texture>
                </control>
            </control>			
        </control>
    </include>
	
	<include name="Home_Button">
		<control type="button" id="9980">
			<top>0</top>
			<left>100</left>
			<right>100</right>
            <height>140</height>
            <visible allowhiddenfocus="true">Window.IsVisible(Home.xml) + !Skin.String(SubmenuStyle, Touch)</visible>
            <onback>ClearProperty(submenumouse,home)</onback>
			<onback>50</onback>
			<onfocus condition="Integer.IsGreater(Container(9002).NumItems,0)">SetProperty(submenumouse,1,home)</onfocus>
			<onfocus>9002</onfocus>
			<onunfocus>ClearProperty(submenumouse,home)</onunfocus>
			<hitrect x="100" y="0" w="1920" h="140" />
        </control>
	</include>		
	
    <!-- SubMenu -->
    <include name="Home_SubMenu">   
        <control type="group">
            <animation effect="slide" tween="quadratic" easing="out" time="200" start="0,-400" end="0" condition="!String.IsEmpty(Window(home).Property(submenumouse))" reversible="false">Conditional</animation>
            <animation effect="slide" tween="quadratic" easing="in" time="200" end="0,-400" start="0" condition="String.IsEmpty(Window(home).Property(submenumouse))" reversible="false">Conditional</animation>
			<animation effect="slide" tween="quadratic" easing="in" time="200" end="0,400" start="0" condition="Skin.String(SubmenuStyle, Touch)" reversible="false">Conditional</animation>          			
			<visible>Control.HasFocus(9000) | Integer.IsGreater(Container(9002).NumItems,0) | !String.IsEmpty(Window(home).Property(submenumouse))</visible>
            <visible>[String.IsEmpty(Container(9000).ListItem.Property(ParentalControl)) | String.Contains(Container(9000).ListItem.Property(ParentalControl),no)] | String.IsEqual(Skin.String(mypassword),Skin.String(passcode))</visible>
            <include>Dialog_Top</include>
            <include condition="String.IsEmpty(Skin.String(SubmenuStyle)) | Skin.String(SubmenuStyle, Large)">Dialog_Background_Home</include>
            <include condition="Skin.String(SubmenuStyle, Small)">Dialog_Background_Home_Small</include>
			<include condition="Skin.String(SubmenuStyle, Touch)">Dialog_Background_Touch</include>
            <include content="Dialog_Top_IconHeader_Home" condition="String.IsEmpty(Skin.String(SubmenuStyle)) | Skin.String(SubmenuStyle, Large)">    
                <param name="label" value="$LOCALIZE[1034] / $INFO[Container(9000).ListItem.Label] / $INFO[Container(9002).ListItem.Label]" />
                <param name="icon" value="$INFO[Container(9000).ListItem.Icon]" />
            </include>
            <include content="Dialog_Top_IconHeader_Home_Small" condition="Skin.String(SubmenuStyle, Small)">
                <param name="icon" value="$INFO[Container(9000).ListItem.Icon]" />
            </include>
            <include content="Dialog_Top_Arrows_Home" condition="String.IsEmpty(Skin.String(SubmenuStyle)) | Skin.String(SubmenuStyle, Large)">
                <param name="id" value="9002" />
            </include>
            <include content="Dialog_Top_Arrows_Home_Small" condition="Skin.String(SubmenuStyle, Small)">
                <param name="id" value="9002" />
            </include>	
			<control type="panel" id="9002">
                <onup>9000</onup>
				<onup>ClearProperty(submenumouse,home)</onup>
                <ondown>9000</ondown>
				<ondown>ClearProperty(submenumouse,home)</ondown>
                <onback>9000</onback>
				<onback>ClearProperty(submenumouse,home)</onback>
                <onleft>9002</onleft>
                <onright>9002</onright>
                <include content="DefSubMenu" condition="String.IsEmpty(Skin.String(SubmenuStyle)) | Skin.String(SubmenuStyle, Large)">
					<param name="icon" value="$INFO[ListItem.Icon]" />
                </include> 
                <include content="DefSubMenu_Small" condition="Skin.String(SubmenuStyle, Small)">
					<param name="icon" value="$INFO[ListItem.Icon]" />
                </include>
                <include content="DefSubMenu_Touch" condition="Skin.String(SubmenuStyle, Touch)">
					<param name="icon" value="$INFO[ListItem.Icon]" />
                </include>  				
                <content>
                    <include>skinshortcuts-submenu</include>
                </content> 
            </control>
        </control>
    </include>
	<include name="Vertical_SubMenu">
		<control type="group" id="90001">
			<animation effect="slide" end="-500,0" time="240">WindowClose</animation>
			<animation effect="slide" end="350,0" time="280" condition="Control.HasFocus(90100)">Conditional</animation>
			<left>-350</left>
			<control type="image">
				<width>200</width>
				<height>1080</height>
				<texture colordiffuse="$VAR[HomeBar_Color]">common/white.png</texture>
				<visible>Control.HasFocus(90100)</visible>
			</control>
			<control type="list" id="90100">
				<animation effect="slide" end="0,300" time="1" condition="Integer.IsLessOrEqual(Container(90100).NumItems,7)">Conditional</animation>
				<animation effect="slide" end="0,200" time="1" condition="Integer.IsGreaterOrEqual(Container(90100).NumItems,8) + Integer.IsLess(Container(90100).NumItems,10)">Conditional</animation>
				<top>210</top>
				<width>380</width>
				<height>840</height>
				<onup>90100</onup>
				<ondown>90100</ondown>
				<onright>9000</onright>
				<pagecontrol />
				<scrolltime tween="quadratic" easing="out">300</scrolltime>
				<orientation>vertical</orientation>
				<itemlayout height="60" width="190">
					<control type="label">
						<left>5</left>
						<width>185</width>
						<height>60</height>
						<font>Font-SubMenu</font>
						<textcolor>$VAR[Defs_HomeTextColor]</textcolor>
						<label>$INFO[ListItem.Label]</label>
					</control>
				</itemlayout>
				<focusedlayout height="60" width="190">
					<control type="image">
						<width>190</width>
						<height>60</height>
						<texture colordiffuse="$VAR[HighlightColor]">common/white.png</texture>
					</control>
					<control type="label">
						<left>5</left>
						<width>185</width>
						<height>60</height>
						<font>Font-SubMenu</font>
						<textcolor>$VAR[Defs_HomeTextColor]</textcolor>
						<label>$INFO[ListItem.Label]</label>
					</control>
				</focusedlayout>
				<content>
					<include>skinshortcuts-submenu</include>
				</content>
			</control>
		</control>
	</include>	
	<include name="SubmenuMouseButton">
		<control type="button" id="99100">
			<top>145</top>
			<height>87</height>
			<width>100%</width>
			<texturefocus />
			<texturenofocus />
			<label />
			<font />
		</control>
	</include>
	<!-- Home Widget -->
    <include name="Home_Widget_Control_NoPersist">
         <control type="wraplist" id="9001">
            <orientation>horizontal</orientation>
            <width>100%</width>
            <top>top</top>
            <height>height</height>
            <onfocus>SetProperty(FO9001,1,home)</onfocus>
			<onfocus>ClearProperty(submenumouse,home)</onfocus>
            <onunfocus>ClearProperty(FO9001,home)</onunfocus>
			<onunfocus>ClearProperty(submenumouse,home)</onunfocus>			
            <onup>ClearProperty(FO9001,home)</onup>
            <ondown>ClearProperty(FO9001,home)</ondown>
            <onback>ClearProperty(FO9001,home)</onback>
            <onback>9000</onback>
            <ondown>9000</ondown>
            <onup>9000</onup>
            <oninfo condition="String.IsEmpty(Container(9001).ListItem.TvShowTitle) + String.IsEmpty(Container(9001).ListItem.Artist)">RunScript(script.extendedinfo,info=extendedinfo,name=$INFO[Container(9001).ListItem.Title],imdb_id=$INFO[Container(9001).ListItem.IMDBNumber])</oninfo>
            <oninfo condition="!String.IsEmpty(Container(9001).ListItem.TvShowTitle)">RunScript(script.extendedinfo,info=extendedtvinfo,name=$INFO[Container(9001).ListItem.TvShowTitle],imdb_id=$INFO[Container(9001).ListItem.IMDBNumber])</oninfo>
            <autoscroll time="8000">![Control.HasFocus(9001) | Control.HasFocus(9101)]</autoscroll>
            <scrolltime tween="sine" easing="out">240</scrolltime>
            <itemlayout />
            <focusedlayout width="1920" height="1080" />
            <content target="$VAR[Defs_HomeWidget_Target]">$VAR[Defs_HomeWidget_Content]</content>
         </control>
    </include>
    <include name="Home_Widget_Control">
        <include condition="!Skin.HasSetting(widgets.persistent)">Home_Widget_Control_NoPersist</include>
        <include condition="Skin.HasSetting(widgets.persistent) + [String.IsEmpty(Container(9000).ListItem.Property(ParentalControl)) | String.Contains(Container(9000).ListItem.Property(ParentalControl),no)] | String.IsEqual(Skin.String(mypassword),Skin.String(passcode))">skinshortcuts-template-widget</include>
        <control type="button" id="9101">
            <width>100%</width>
            <top>top</top>
            <height>height</height>
            <onfocus>SetProperty(FO9001,1,home)</onfocus>
            <onunfocus>ClearProperty(FO9001,home)</onunfocus>
            <onup>ClearProperty(FO9001,home)</onup>
            <ondown>ClearProperty(FO9001,home)</ondown>
            <onback>ClearProperty(FO9001,home)</onback>
            <onback>9000</onback>
            <ondown>9000</ondown>
            <onup>9000</onup>
            <onclick>PlayMedia($INFO[Container(9001).ListItem.FileNameAndPath])</onclick>
            <visible>Integer.IsGreater(Container(9001).NumItems,0)</visible>
			<hitrect x="0" y="0" w="150" h="340" />
        </control>
    </include>
    <include name="Home_Widget_DiscArt">
        <control type="image">       
            <left>625</left>
            <top>side</top>
            <width>300</width>
            <height>300</height>    
            <aspectratio>keep</aspectratio>
            <animation type="VisibleChange">
                <effect type="slide" start="-300" end="0" time="300" />
                <effect type="rotate" start="120" end="0" time="300" center="auto"/>
            </animation>
            <fadetime>300</fadetime>          
            <visible>!String.IsEmpty(Container(9001).ListItem.Art(discart)) + !Skin.String(WidgetStyle, roundedwidget) + !Skin.String(WidgetStyle, squaredwidget)</visible>           
            <visible>String.IsEmpty(Container(9000).ListItem.Property(PosterWidget)) | Skin.String(WidgetStyle, beveledwidget)</visible>
            <texture background="true">$INFO[Container(9001).ListItem.Art(discart)]</texture>            
        </control>       
        <control type="image">
            <left>650</left>
            <top>side</top>
            <width>300</width>
            <height>300</height>    
            <aspectratio>keep</aspectratio>
            <animation type="VisibleChange">
				<effect type="slide" start="-300" end="0" time="300" />
				<effect type="rotate" start="120" end="0" time="300" center="auto"/>
            </animation>
            <fadetime>300</fadetime>
            <visible>!String.IsEmpty(Container(9001).ListItem.Art(discart)) + !Skin.String(WidgetStyle, beveledwidget)</visible>
            <visible>String.IsEmpty(Container(9000).ListItem.Property(PosterWidget)) | Skin.String(WidgetStyle, roundedwidget) | Skin.String(WidgetStyle, squaredwidget)</visible>
            <texture background="true">$INFO[Container(9001).ListItem.Art(discart)]</texture>
        </control>
    </include>
    
    <include name="Home_Widget_Left">
        <include>Animation_Left</include>
        <visible>Integer.IsGreater(Container(9001).NumItems,0)</visible>    
        <visible>![!String.IsEmpty(Container(9002).ListItem.Property(Background)) + !String.IsEmpty(Window(home).Property(submenumouse))]</visible>
        <include condition="Skin.HasSetting(home.showdiscart) + !String.IsEqual(Skin.String(home.widgetposters),$LOCALIZE[31154]) + !String.IsEqual(Skin.String(home.widgetposters),$LOCALIZE[31153])">Home_Widget_DiscArt</include>
		<animation effect="slide" end="80" condition="Skin.String(HomeStyle, vertical)">Conditional</animation>
        <control type="image">
            <posx>0</posx>
            <width>800</width>
            <height>340</height>
            <animation effect="fade" start="100" end="90" time="200" condition="Skin.HasSetting(home.transparent) + [!String.IsEqual(Skin.String(home.widgetposters),$LOCALIZE[31154]) + !String.IsEqual(Skin.String(home.widgetposters),$LOCALIZE[31153]) + ![!String.IsEmpty(Container(9000).ListItem.Property(PosterWidget)) + String.IsEqual(Skin.String(home.widgetposters),$LOCALIZE[31166])] | [String.IsEqual(Skin.String(home.widgetposters),$LOCALIZE[31154]) + ![Control.HasFocus(9001) | Control.HasFocus(9101)]]]">Conditional</animation>          
            <texture align="left" border="150" colordiffuse="$VAR[Widget_PrimaryColor]">common/half-tile2.png</texture>          
            <visible>String.IsEmpty(Skin.String(WidgetStyle)) | Skin.String(WidgetStyle, beveledwidget)</visible>
        </control>      
        <control type="image">
            <posx>0</posx>
            <width>800</width>
            <height>340</height>
            <animation effect="fade" start="100" end="90" time="200" condition="Skin.HasSetting(home.transparent) + [!String.IsEqual(Skin.String(home.widgetposters),$LOCALIZE[31154]) + !String.IsEqual(Skin.String(home.widgetposters),$LOCALIZE[31153]) + ![!String.IsEmpty(Container(9000).ListItem.Property(PosterWidget)) + String.IsEqual(Skin.String(home.widgetposters),$LOCALIZE[31166])] | [String.IsEqual(Skin.String(home.widgetposters),$LOCALIZE[31154]) + ![Control.HasFocus(9001) | Control.HasFocus(9101)]]]">Conditional</animation>
            <texture align="left" border="150" colordiffuse="$VAR[Widget_PrimaryColor]">common/half-tile_rounded2.png</texture>
            <visible>Skin.String(WidgetStyle, roundedwidget)</visible>
        </control>           
        <control type="image">
            <posx>0</posx>
            <width>800</width>
            <height>340</height>
            <animation effect="fade" start="100" end="90" time="200" condition="Skin.HasSetting(home.transparent) + [!String.IsEqual(Skin.String(home.widgetposters),$LOCALIZE[31154]) + !String.IsEqual(Skin.String(home.widgetposters),$LOCALIZE[31153]) + ![!String.IsEmpty(Container(9000).ListItem.Property(PosterWidget)) + String.IsEqual(Skin.String(home.widgetposters),$LOCALIZE[31166])] | [String.IsEqual(Skin.String(home.widgetposters),$LOCALIZE[31154]) + ![Control.HasFocus(9001) | Control.HasFocus(9101)]]]">Conditional</animation>
            <texture align="left" border="150" colordiffuse="$VAR[Widget_PrimaryColor]">common/half-tile_square.png</texture>
            <visible>Skin.String(WidgetStyle, squaredwidget)</visible>         
        </control>      
        <control type="image">
			<top>5</top>
			<left>600</left>
			<height>70</height>
			<width>181</width>
			<texture>$VAR[ClearLogoTop]</texture>
			<visible>Skin.HasSetting(home.showclearlogo)</visible>
        </control>
		<control type="image">
			<posx>710</posx>
			<posy>273</posy>
			<height>40</height>
			<width>40</width> 
			<aligny>center</aligny>                        
			<texture colordiffuse="ffffffff">$VAR[Image_Indicator_Back_9001]</texture>
			<visible>Skin.HasSetting(home.showindicators)</visible>
		</control>
		<control type="image">
			<posx>710</posx>
			<posy>273</posy>
			<height>40</height>
			<width>40</width>
			<aligny>center</aligny>                           
			<texture colordiffuse="$VAR[HighlightColor2]">$VAR[Image_Indicator_9001]</texture>
			<visible>Skin.HasSetting(home.showindicators)</visible>
		</control>
        <control type="grouplist">     
            <posx>24</posx>
            <posy>20</posy>
            <width>680</width>
            <orientation>vertical</orientation>       
            <control type="label">
                <width>520</width>
                <scroll>yes</scroll>
                <label>$VAR[Label_HomeWidget]</label>
                <aligny>top</aligny>
                <height>35</height>
                <animation effect="fade" start="100" end="70" condition="true">Conditional</animation>
                <textcolor>HomeBarFG</textcolor>
                <visible>Skin.HasSetting(home.showclearlogo)</visible>
            </control>
            <control type="label">
                <label>$VAR[Label_HomeWidget]</label>
                <aligny>top</aligny>
                <height>35</height>
                <animation effect="fade" start="100" end="70" condition="true">Conditional</animation>
                <textcolor>HomeBarFG</textcolor>            
                <visible>!Skin.HasSetting(home.showclearlogo)</visible>
            </control>
            <control type="label">        
                <scroll>yes</scroll>
                <label>$VAR[Label_HomeWidget_Label]</label>
                <aligny>top</aligny>
                <font>Font-WidgetInfoTitle</font>
                <height>70</height>
                <textcolor>$VAR[HighlightColor2]</textcolor>
            </control>
            <control type="textbox">
                <label>$VAR[Label_HomeWidget_Plot]</label>
                <aligny>top</aligny>
                <align>left</align>
                <height>120</height>
                <animation effect="fade" start="100" end="70" condition="true">Conditional</animation>
                <textcolor>HomeBarFG</textcolor>
                <font>Font-ListInfo</font>
            </control>
            <control type="label">
                <width>620</width>
                <scroll>yes</scroll>
                <label>$VAR[Label_HomeWidget_Info]</label>
                <aligny>center</aligny>
                <animation effect="fade" start="100" end="70" condition="true">Conditional</animation>
                <font>Font-ListInfo-Small</font>
                <height>65</height>
                <textcolor>HomeBarFG</textcolor>
            </control>           
        </control>
    </include>
    <include name="Home_Widget_Right">
        <include>Animation_Right</include>
        <visible>Integer.IsGreater(Container(9001).NumItems,0)</visible>        
        <visible>![!String.IsEmpty(Container(9002).ListItem.Property(Background)) + !String.IsEmpty(Window(home).Property(submenumouse))]</visible>
		<animation effect="slide" end="80" condition="Skin.String(HomeStyle, vertical)">Conditional</animation>
        <control type="image">         
            <posx>750</posx>
            <width>2000</width>
            <height>340</height>             
            <texture colordiffuse="$VAR[Widget_SecondaryColor]" border="150">common/half-tile.png</texture>
            <!--<animation effect="fade" start="100" end="80" condition="true">Conditional</animation>-->               
            <visible>String.IsEmpty(Skin.String(WidgetStyle)) | Skin.String(WidgetStyle, beveledwidget)</visible>
        </control>           
        <control type="image">
            <posx>792</posx>
            <width>2000</width>
            <height>340</height>    
            <texture colordiffuse="$VAR[Widget_SecondaryColor]" border="150">common/half-tile_rounded.png</texture>
            <!--<animation effect="fade" start="100" end="80" condition="true">Conditional</animation>-->
            <visible>Skin.String(WidgetStyle, roundedwidget)</visible>
        </control>           
        <control type="image">
            <posx>800</posx>
            <width>2000</width>
            <height>340</height>    
            <texture colordiffuse="$VAR[Widget_SecondaryColor]" border="150">common/half-tile_square.png</texture>
            <!--<animation effect="fade" start="100" end="80" condition="true">Conditional</animation>-->
            <visible>Skin.String(WidgetStyle, squaredwidget)</visible>
        </control>
        <control type="grouplist">
            <visible>!Container(9001).IsUpdating</visible>
            <visible>![String.IsEqual(Container(9000).ListItem.Property(widget),Weather) | [String.IsEmpty(Container(9000).ListItem.Property(widget)) + String.IsEqual(Skin.String(home.fallbackwidget),Weather)]] | String.IsEmpty(Skin.String(weather.fanart.path))</visible>
            <include>Animation_FadeIn</include>
            <include>Animation_FadeOut</include>
            <animation effect="slide" start="0" end="-220" condition="!Container(9001).OnNext" reversible="false" time="200">Conditional</animation>
            <animation effect="slide" start="0" end="220" condition="!Container(9001).OnPrevious" reversible="false" time="200">Conditional</animation>             
            <posx>810</posx>
            <width>2000</width>
            <top>pad</top>
            <height>320</height>
            <orientation>horizontal</orientation>
            <itemgap>0</itemgap>
            <include content="Object_HomeWidgetPosterFocus">
                <param name="id" value="0" />                 
                <param name="focuseditem" value="true" />
            </include>
            <include content="Object_HomeWidgetPoster">
                <param name="id" value="1" />
                <param name="focuseditem" value="false" />
            </include>
            <include content="Object_HomeWidgetPoster">
                <param name="id" value="2" />
                <param name="focuseditem" value="false" />
            </include>
            <include content="Object_HomeWidgetPoster">
                <param name="id" value="3" />
                <param name="focuseditem" value="false" />
            </include>
            <include content="Object_HomeWidgetPoster">
                <param name="id" value="4" />
                <param name="focuseditem" value="false" />
            </include>
            <include content="Object_HomeWidgetPoster">
                <param name="id" value="5" />
                <param name="focuseditem" value="false" />
            </include>     
        </control>
        <control type="grouplist">
            <left>850</left>
            <right>0</right>
            <orientation>horizontal</orientation>
            <height>340</height>
            <itemgap>70</itemgap>
            <visible>!Container(9001).IsUpdating</visible>
            <include>Animation_FadeIn</include>
            <include>Animation_FadeOut</include>
            <visible>[String.IsEqual(Container(9000).ListItem.Property(widget),Weather) | [String.IsEmpty(Container(9000).ListItem.Property(widget)) + String.IsEqual(Skin.String(home.fallbackwidget),Weather)]] + !String.IsEmpty(Skin.String(weather.fanart.path))</visible>
            <include content="Object_WeatherOutlook">
                <param name="day" value="Day0" />
                <param name="dayname" value="$LOCALIZE[33006]" />
            </include>
            <include content="Object_WeatherOutlook">
                <param name="day" value="Day1" />
                <param name="dayname" value="$INFO[Window(weather).Property(Day1.Title)]" />
            </include>
            <include content="Object_WeatherOutlook">
                <param name="day" value="Day2" />
                <param name="dayname" value="$INFO[Window(weather).Property(Day2.Title)]" />
            </include>
            <include content="Object_WeatherOutlook">
                <param name="day" value="Day3" />
                <param name="dayname" value="$INFO[Window(weather).Property(Day3.Title)]" />
            </include>
        </control>
    </include>
    <include name="Home_Widget">
        <control type="group">
            <posy>400</posy>
            <animation effect="slide" end="0,160" condition="Skin.String(HomeStyle, textonly)">Conditional</animation>
			<animation effect="slide" end="160" condition="Skin.String(HomeStyle, vertical)">Conditional</animation>
			<animation effect="slide" end="0,280" condition="Skin.String(HomeStyle, vertical)">Conditional</animation>
            <visible>[[Control.HasFocus(9001) | Control.HasFocus(9101)] + [String.IsEqual(Skin.String(home.widgetposters),$LOCALIZE[31154]) | [String.IsEqual(Skin.String(home.widgetposters),$LOCALIZE[31166]) + String.IsEqual(Container(9000).ListItem.Property(PosterWidget),$LOCALIZE[31154])]]] | String.IsEqual(Skin.String(home.widgetposters),$LOCALIZE[31153]) | [String.IsEqual(Skin.String(home.widgetposters),$LOCALIZE[31166]) + String.IsEqual(Container(9000).ListItem.Property(PosterWidget),$LOCALIZE[31153])]</visible>
            <include>Home_Widget_Right</include>
            <visible>!Player.HasVideo | [Player.HasVideo + !Skin.HasSetting(background.showvideo)]</visible>
        </control>
        <control type="group">
            <posy>400</posy>
            <animation effect="slide" end="0,160" condition="Skin.String(HomeStyle, textonly)">Conditional</animation>
			<animation effect="slide" end="160" condition="Skin.String(HomeStyle, vertical)">Conditional</animation>
			<animation effect="slide" end="0,280" condition="Skin.String(HomeStyle, vertical)">Conditional</animation>
            <include>Home_Widget_Left</include>
            <visible>!Player.HasVideo | [Player.HasVideo + !Skin.HasSetting(background.showvideo)]</visible>
        </control>
    </include>
    <include name="Home_Widget_Hidden">
        <control type="group">
            <posy>666</posy>
            <!-- <animation effect="slide" start="0" end="0,-266" time="0" condition="![Control.HasFocus(9001) | Control.HasFocus(9101)]">Conditional</animation> -->
            <visible>[Control.HasFocus(9001) | Control.HasFocus(9101)] + [String.IsEqual(Skin.String(home.widgetposters),$LOCALIZE[31154]) | [String.IsEqual(Skin.String(home.widgetposters),$LOCALIZE[31166]) + String.IsEqual(Container(9000).ListItem.Property(PosterWidget),$LOCALIZE[31154])]] | [String.IsEqual(Skin.String(home.widgetposters),$LOCALIZE[31166]) + String.IsEqual(Container(9000).ListItem.Property(PosterWidget),$LOCALIZE[31153])]</visible>
            <include>Home_Widget_Right</include>
            <visible>!Player.HasVideo | [Player.HasVideo + !Skin.HasSetting(background.showvideo)]</visible>
        </control>
        <control type="group">
            <posy>666</posy>
            <!-- <animation effect="slide" start="0" end="0,-266" time="0" condition="![Control.HasFocus(9001) | Control.HasFocus(9101)]">Conditional</animation> -->
			<visible>[Control.HasFocus(9001) | Control.HasFocus(9101)] + [String.IsEqual(Skin.String(home.widgetposters),$LOCALIZE[31154]) | [String.IsEqual(Skin.String(home.widgetposters),$LOCALIZE[31166]) + String.IsEqual(Container(9000).ListItem.Property(PosterWidget),$LOCALIZE[31154])]] | [String.IsEqual(Skin.String(home.widgetposters),$LOCALIZE[31166]) + String.IsEqual(Container(9000).ListItem.Property(PosterWidget),$LOCALIZE[31153])] | [Control.HasFocus(9001) | Control.HasFocus(9101)] + [Skin.HasSetting(home.hidewidgetbox) + String.IsEqual(Skin.String(home.widgetposters),$LOCALIZE[31155])]</visible>
            <include>Home_Widget_Left</include>
            <visible>!Player.HasVideo | [Player.HasVideo + !Skin.HasSetting(background.showvideo)]</visible>
        </control>
    </include>
	
    <!-- Now Playing -->
    <include name="Home_NowPlaying">
        <control type="group">
            <animation effect="slide" end="0,160" condition="Skin.String(HomeStyle, textonly)">Conditional</animation>
            <animation effect="slide" end="200,270" start="0" time="0" reversible="false" condition="String.IsEqual(Skin.String(HomeStyle),vertical)">Conditional</animation>
			<control type="group">
                <visible>Window.IsVisible(home)</visible>
                <!-- <visible>![Control.HasFocus(9001) | Control.HasFocus(9101)]</visible> -->
                <visible>!Window.IsActive(DialogNotification.xml)</visible>
                <visible>!Window.IsActive(DialogExtendedProgressBar.xml)</visible>
                <visible>!Player.HasMedia</visible>
                <visible>system.getbool(lookandfeel.enablerssfeeds)</visible>
                <visible>!Skin.String(HomeStyle, textintile)</visible>
                <animation effect="slide" end="0,-266" condition="true">Conditional</animation>
                <animation effect="slide" start="-1200" end="0" time="250">VisibleChange</animation>
                <control type="image">
                    <left>0</left>
                    <posy>64r</posy>
                    <width>1100</width>
                    <height>64</height>                
                    <texture align="left" flipy="true" flipx="false" border="32,0,32,64" colordiffuse="$VAR[HomeBar_Color]">common/header.png</texture>
                    <animation effect="fade" start="100" end="90" time="200" condition="Skin.HasSetting(home.transparent)">Conditional</animation>
                </control>
                <control type="image">
                    <left>16</left>
                    <posy>48r</posy>
                    <width>32</width>
                    <height>32</height>
                    <texture colordiffuse="LineLabel">$VAR[Image_RSS_Icon]</texture>
                </control>
            </control>
            <control type="group">
                <visible>Window.IsVisible(home)</visible>
                <visible>!Window.IsActive(DialogNotification.xml)</visible>
                <visible>!Window.IsActive(DialogExtendedProgressBar.xml)</visible>
                <visible>Player.HasMedia</visible>
                <animation effect="slide" end="0,-266" condition="true">Conditional</animation>
                <animation effect="slide" start="-1200" end="0" time="250">VisibleChange</animation>
                <control type="image">
                    <left>0</left>
                    <posy>64r</posy>
                    <width>1100</width>
                    <height>64</height>                      
                    <texture align="left" flipy="true" flipx="false" border="32,0,32,64" colordiffuse="$VAR[HomeBar_Color]">common/header.png</texture>
                    <animation effect="fade" start="100" end="90" time="200" condition="Skin.HasSetting(home.transparent)">Conditional</animation>
                </control>
                
                <!-- Player Controls -->
                <control type="grouplist" id="9005">
                    <onup condition="Integer.IsGreater(Container(9001).NumItems,0) + ![String.Contains(Container(9000).ListItem.Property(ParentalControl),yes) + !String.IsEqual(Skin.String(mypassword),Skin.String(passcode))]">9001</onup>
                    <ondown>9000</ondown>
                    <visible allowhiddenfocus="true">ControlGroup(9005).HasFocus()</visible>
                    <orientation>horizontal</orientation>
                    <itemgap>8</itemgap>
                    <bottom>16</bottom>
                    <left>16</left>
                    <width>1020</width>
                    <height>32</height>
                    <control type="button" id="12">
                        <description>Skip Back</description>
                        <width>32</width>
                        <height>32</height>
                        <label></label>
                        <font>noop</font>
                        <texturefocus colordiffuse="$VAR[HighlightColor]" flipx="true">osd/next.png</texturefocus>
                        <texturenofocus colordiffuse="LineLabel" flipx="true">osd/next.png</texturenofocus>
                        <onclick>PlayerControl(Previous)</onclick>
                    </control>

                    <control type="button" id="13">
                        <description>Rewind</description>
                        <width>32</width>
                        <height>32</height>
                        <label></label>
                        <font>noop</font>
                        <texturefocus colordiffuse="$VAR[HighlightColor]" flipx="true">osd/ff.png</texturefocus>
                        <texturenofocus colordiffuse="LineLabel" flipx="true">osd/ff.png</texturenofocus>
                        <onclick>PlayerControl(Rewind)</onclick>
                    </control>

                    <control type="togglebutton" id="14">
                        <description>Play/Pause</description>
                        <width>32</width>
                        <height>32</height>
                        <label></label>
                        <altlabel></altlabel>
                        <font>noop</font>
                        <texturefocus colordiffuse="$VAR[HighlightColor]">osd/pause.png</texturefocus>
                        <texturenofocus colordiffuse="LineLabel">osd/pause.png</texturenofocus>
                        <usealttexture>Player.Paused | Player.Forwarding | Player.Rewinding</usealttexture>
                        <alttexturefocus colordiffuse="$VAR[HighlightColor]">osd/play.png</alttexturefocus>
                        <alttexturenofocus colordiffuse="LineLabel">osd/play.png</alttexturenofocus>
                        <onclick>PlayerControl(Play)</onclick>
                    </control>

                    <control type="button" id="15">
                        <description>Stop</description>
                        <width>32</width>
                        <height>32</height>
                        <label></label>
                        <font>noop</font>
                        <texturefocus colordiffuse="$VAR[HighlightColor]">osd/stop.png</texturefocus>
                        <texturenofocus colordiffuse="LineLabel">osd/stop.png</texturenofocus>
                        <onclick>PlayerControl(Stop)</onclick>
                    </control>

                    <control type="button" id="16">
                        <description>Fast Forward</description>
                        <width>32</width>
                        <height>32</height>
                        <label></label>
                        <font>noop</font>
                        <texturefocus colordiffuse="$VAR[HighlightColor]">osd/ff.png</texturefocus>
                        <texturenofocus colordiffuse="LineLabel">osd/ff.png</texturenofocus>
                        <onclick>PlayerControl(Forward)</onclick>
                    </control>

                    <control type="button" id="17">
                        <description>Next</description>
                        <width>32</width>
                        <height>32</height>
                        <label></label>
                        <font>noop</font>
                        <texturefocus colordiffuse="$VAR[HighlightColor]">osd/next.png</texturefocus>
                        <texturenofocus colordiffuse="LineLabel">osd/next.png</texturenofocus>
                        <onclick>PlayerControl(Next)</onclick>
                    </control>
                    </control>
                <control type="grouplist">
                    <visible>ControlGroup(9005).HasFocus()</visible>
                    <orientation>horizontal</orientation>
                    <itemgap>8</itemgap>
                    <bottom>16</bottom>
                    <left>256</left>
                    <width>820</width>
                    <height>32</height>
                    <control type="label">
                        <height>100%</height>
                        <width max="580">auto</width>
                        <font>Font-ListInfo-Small-Bold</font>
                        <textcolor>LineLabel</textcolor>
                        <label>   [COLOR=$VAR[HighlightColor2]]$INFO[MusicPlayer.Artist][/COLOR]  $INFO[MusicPlayer.Title]</label>
                        <visible>Player.HasAudio</visible>
                    </control>
                    <control type="label">
                        <height>100%</height>
                        <width max="580">auto</width>
                        <font>Font-ListInfo-Small-Bold</font>
                        <textcolor>LineLabel</textcolor>                       
                        <label>   [COLOR=$VAR[HighlightColor2]]$INFO[VideoPlayer.Title][/COLOR]</label>
                        <visible>Player.HasVideo + !VideoPlayer.Content(LiveTV) + String.IsEmpty(VideoPlayer.TvShowTitle)</visible>
                    </control>
                    <control type="label">
                        <height>100%</height>
                        <width max="580">auto</width>
                        <font>Font-ListInfo-Small-Bold</font>
                        <textcolor>LineLabel</textcolor>
                        <label>   [COLOR=$VAR[HighlightColor2]]$INFO[VideoPlayer.TvShowTitle][/COLOR]  $INFO[VideoPlayer.Title]</label>
                        <visible>Player.HasVideo + !VideoPlayer.Content(LiveTV) + !String.IsEmpty(VideoPlayer.TvShowTitle)</visible>
                    </control>
                    <control type="label">
                        <height>100%</height>
                        <width max="580">auto</width>
                        <font>Font-ListInfo-Small-Bold</font>
                       <textcolor>LineLabel</textcolor>
                        <label>   [COLOR=$VAR[HighlightColor2]]$INFO[VideoPlayer.ChannelName][/COLOR]  $INFO[VideoPlayer.Title]</label>
                        <visible>Player.HasVideo + VideoPlayer.Content(LiveTV)</visible>
                    </control>
                    <control type="label">
                        <height>100%</height>
                        <width max="320">auto</width>
                        <font>Font-ListInfo-Small-Bold</font>
                        <textcolor>LineLabel</textcolor>
                        <label>  •  $INFO[Player.Time] / $INFO[Player.Duration]</label>
                    </control>
                </control>

                <!-- Now Playing -->                
                <control type="image">
                    <left>16</left>
                    <posy>48r</posy>
                    <width>32</width>
                    <height>32</height>
                    <texture colordiffuse="LineLabel">$VAR[Image_RSS_Icon]</texture>
                    <visible>!ControlGroup(9005).HasFocus()</visible>                    
                </control>
                <control type="grouplist">
                    <visible>!ControlGroup(9005).HasFocus()</visible>
                    <orientation>horizontal</orientation>
                    <itemgap>0</itemgap>
                    <bottom>16</bottom>
                    <left>48</left>
                    <width>1020</width>
                    <height>32</height>
                    <control type="label">
                        <height>100%</height>
                        <width max="820">auto</width>
                        <font>Font-ListInfo-Small-Bold</font>
                        <textcolor>LineLabel</textcolor>
                        <label>   [COLOR=$VAR[HighlightColor2]]$INFO[MusicPlayer.Artist][/COLOR]  $INFO[MusicPlayer.Title]</label>
                        <visible>Player.HasAudio</visible>
                    </control>
                    <control type="label">
                        <height>100%</height>
                        <width max="820">auto</width>
                        <font>Font-ListInfo-Small-Bold</font>
                        <textcolor>LineLabel</textcolor>                         
                        <label>   [COLOR=$VAR[HighlightColor2]]$INFO[VideoPlayer.Title][/COLOR]</label>
                        <visible>Player.HasVideo + !VideoPlayer.Content(LiveTV) + String.IsEmpty(VideoPlayer.TvShowTitle)</visible>
                    </control>
                    <control type="label">
                        <height>100%</height>
                        <width max="820">auto</width>
                        <font>Font-ListInfo-Small-Bold</font>
                        <textcolor>LineLabel</textcolor>                          
                        <label>   [COLOR=$VAR[HighlightColor2]]$INFO[VideoPlayer.TvShowTitle][/COLOR]$INFO[VideoPlayer.Season,  •  ,x]$INFO[VideoPlayer.Episode,,. ]$INFO[VideoPlayer.Title]</label>
                        <visible>Player.HasVideo + !VideoPlayer.Content(LiveTV) + !String.IsEmpty(VideoPlayer.TvShowTitle)</visible>
                    </control>
                    <control type="label">
                        <height>100%</height>
                        <width max="820">auto</width>
                        <font>Font-ListInfo-Small-Bold</font>
                        <textcolor>LineLabel</textcolor>
                        <label>   [COLOR=$VAR[HighlightColor2]]$INFO[VideoPlayer.ChannelName][/COLOR]  $INFO[VideoPlayer.Title]</label>
                        <visible>Player.HasVideo + VideoPlayer.Content(LiveTV)</visible>
                    </control>
                    <control type="label">
                        <height>100%</height>
                        <width max="320">auto</width>
                        <font>Font-ListInfo-Small-Bold</font>
                        <textcolor>LineLabel</textcolor>
                        <label>  •  $INFO[Player.Time] / $INFO[Player.Duration]</label>
                    </control>
                </control>
            </control>
            <control type="group">
                <bottom>266</bottom>
                <visible>Window.IsActive(DialogNotification.xml)</visible>
                <visible>!Window.IsVisible(weather)</visible>
                <animation effect="slide" start="-1200" end="0" time="250">VisibleChange</animation>
				<animation effect="slide" end="206,266" start="0" time="0" reversible="false" condition="String.IsEqual(Skin.String(HomeStyle),vertical)">Conditional</animation>
                <control type="image">
                    <left>0</left>
                    <posy>64r</posy>
                    <width>1100</width>
                    <height>64</height>                      
                    <texture align="left" flipy="true" flipx="false" border="32,0,32,64" colordiffuse="$VAR[HomeBar_Color]">common/header.png</texture>
                    <animation effect="fade" start="100" end="90" time="200" condition="Skin.HasSetting(home.transparent)">Conditional</animation>
                </control>
            </control>
            <control type="group">
                <bottom>266</bottom>
                <visible>!Window.IsActive(DialogNotification.xml)</visible>
                <visible>!Window.IsVisible(weather)</visible>
                <visible>Window.IsActive(DialogExtendedProgressBar.xml)</visible>
                <animation effect="slide" start="-1200" end="0" time="250">VisibleChange</animation>
                <control type="image">
                    <left>0</left>
                    <posy>64r</posy>
                    <width>1100</width>
                    <height>64</height>                       
                    <texture align="left" flipy="true" flipx="false" border="32,0,32,64" colordiffuse="$VAR[HomeBar_Color]">common/header.png</texture>
                    <animation effect="fade" start="100" end="90" time="200" condition="Skin.HasSetting(home.transparent)">Conditional</animation>
                </control>
            </control>
        </control>
    </include>
</includes>