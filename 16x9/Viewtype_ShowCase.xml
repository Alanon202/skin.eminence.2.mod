<?xml version="1.0" encoding="UTF-8"?>
<includes>
    <include name="Viewtype_ShowCase">
        <control type="group">
            <visible>Control.IsVisible(535)</visible>
            <include>Animation_FadeIn</include>
            <include>Animation_FadeOut</include>
            <left>side</left>
            <right>side</right>
            <top>top</top>
            <height>height</height>
			<include content="Object_Line">
                <param name="width" value="1879" />
                <param name="label" value="$INFO[Control.GetLabel(3),, ]$INFO[Control.GetLabel(4),[COLOR=PosterBorder]-[/COLOR] , ]" />
            </include>
<!--Custom scrollbars-->			
			<include>Object_Scrollbar_Alphabet</include>
			<control type="scrollbar" id="61">   
				<visible>Skin.HasSetting(showscrollbars)</visible>
                <onup>50</onup>
				<ondown condition="Skin.HasSetting(AlphabetScrollbar)">6015</ondown>
                <ondown condition="!Skin.HasSetting(AlphabetScrollbar) + !String.IsEqual(Window(home).Property(HubReturn),Home)">ActivateWindow($INFO[Window(home).Property(HubReturn)])</ondown>				
                <top>710</top>
                <orientation>horizontal</orientation>
                <width>1880</width>
                <height>8</height>
                <animation effect="fade" condition="!Control.HasFocus(61) + !Container.Scrolling" time="200" start="100" end="0">Conditional</animation>
            </control>
            <control type="group">
				<centerleft>50%</centerleft>
				<width>1879</width>
				<animation effect="slide" end="0,230" time="500" tween="cubic" easing="inout" condition="Skin.HasSetting(showcase.hideplot)">Conditional</animation>
				<control type="group">
					<width>100%</width>
					<height>100%</height>
					<visible>!Skin.HasSetting(darkoverlay) + !Skin.HasSetting(showcase.hideplot)</visible>
					<include>Object_Background</include>
				</control>
				<control type="group">
					<width>100%</width>
					<height>100%</height>
					<visible>Skin.HasSetting(darkoverlay) + !Skin.HasSetting(showcase.hideplot)</visible>
					<include>Object_Background2</include>
				</control>
				<control type="group">
					<width>100%</width>
					<height>64%</height>
					<visible>!Skin.HasSetting(darkoverlay) + Skin.HasSetting(showcase.hideplot)</visible>
					<include>Object_Background</include>
				</control>
				<control type="group">
					<width>100%</width>
					<height>64%</height>
					<visible>Skin.HasSetting(darkoverlay) + Skin.HasSetting(showcase.hideplot)</visible>
					<include>Object_Background2</include>
				</control>				
				<control type="group">
					<visible>Control.IsVisible(535) + Integer.IsGreater(Container.NumItems,0)</visible>
					<top>-545</top>
					<left>-28.5</left>
					<control type="group">
						<camera x="900" y="810" />
						<control type="group" id="6001">
							<left>55</left>
							<top>570</top>
							<visible>Container.OnNext</visible>
							<animation effect="slide" end="-135,0" time="200" reversible="false">Hidden</animation>
							<control type="group">
								<left>15</left>
								<visible>!String.IsEmpty(Container(535).ListItemNoWrap(-7).FolderPath)</visible>
								<visible>Container.OnNext</visible>
								<scale>true</scale>
								<animation effect="fade" start="100" end="0" time="70" reversible="false">Hidden</animation>
								<animation effect="rotatey" center="-135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
								<include>MovieShowCaseItem-7</include>
							</control>
							<control type="group">
								<left>150</left>
								<visible>!String.IsEmpty(Container(535).ListItemNoWrap(-6).FolderPath)</visible>
								<animation effect="rotatey" center="0" start="-55" end="-55" time="0" condition="true">Conditional</animation>
								<include>MovieShowCaseItem-6</include>
							</control>
							<control type="group">
								<left>285</left>
								<visible>!String.IsEmpty(Container(535).ListItemNoWrap(-5).FolderPath)</visible>
								<animation effect="rotatey" center="135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
								<include>MovieShowCaseItem-5</include>
							</control>
							<control type="group">
								<left>420</left>
								<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-4).FolderPath)</visible>
								<animation effect="rotatey" center="270" start="-55" end="-55" time="0" condition="true">Conditional</animation>
								<include>MovieShowCaseItem-4</include>
							</control>
							<control type="group">
								<left>555</left>
								<visible>!String.IsEmpty(Container(535).ListItemNoWrap(-3).FolderPath)</visible>
								<animation effect="rotatey" center="405" start="-55" end="-55" time="0" condition="true">Conditional</animation>
								<include>MovieShowCaseItem-3</include>
							</control>
							<control type="group">
								<left>690</left>
								<visible>!String.IsEmpty(Container(535).ListItemNoWrap(-2).FolderPath)</visible>
								<animation effect="rotatey" center="540" start="-55" end="-55" time="0" condition="true">Conditional</animation>
								<include>MovieShowCaseItem-2</include>
							</control>
							<control type="group">
								<left>1635</left>
								<visible>!String.IsEmpty(Container(535).ListItemNoWrap(6).FolderPath)</visible>
								<visible>!Container.OnNext</visible>
								<animation effect="fade" end="100" delay="100" time="200" reversible="false">Visible</animation>
								<animation effect="rotatey" center="2100" start="55" end="55" time="0" condition="true">Conditional</animation>
								<include>MovieShowCaseItem6</include>
							</control>
							<control type="group">
								<left>1500</left>
								<visible>!String.IsEmpty(Container(535).ListItemNoWrap(5).FolderPath)</visible>
								<animation effect="rotatey" center="1965" start="55" end="55" time="0" condition="true">Conditional</animation>
								<include>MovieShowCaseItem5</include>
							</control>
							<control type="group">
								<left>1365</left>
								<visible>!String.IsEmpty(Container(535).ListItemNoWrap(4).FolderPath)</visible>
								<animation effect="rotatey" center="1830" start="55" end="55" time="0" condition="true">Conditional</animation>
								<include>MovieShowCaseItem4</include>
							</control>
							<control type="group">
								<left>1230</left>
								<visible>!String.IsEmpty(Container(535).ListItemNoWrap(3).FolderPath)</visible>
								<animation effect="rotatey" center="1695" start="55" end="55" time="0" condition="true">Conditional</animation>
								<include>MovieShowCaseItem3</include>
							</control>
							<control type="group">
								<left>1095</left>
								<visible>!String.IsEmpty(Container(535).ListItemNoWrap(2).FolderPath)</visible>
								<animation effect="rotatey" center="1560" start="55" end="55" time="0" condition="true">Conditional</animation>
								<include>MovieShowCaseItem2</include>
							</control>
							<control type="group">
								<left>960</left>
								<visible>!String.IsEmpty(Container(535).ListItemNoWrap(1).FolderPath)</visible>
								<animation effect="rotatey" center="1425" start="55" end="55" time="0" condition="true">Conditional</animation>
								<include>MovieShowCaseItem1</include>
							</control>
							<control type="group">
								<visible>Container.OnNext</visible>
								<animation effect="slide" end="75,0" time="200" reversible="false">Hidden</animation>
								<control type="group">
									<left>825</left>
									<visible>Container.OnNext</visible>
									<visible>!String.IsEmpty(Container(535).ListItemNoWrap(0).FolderPath)</visible>
									<animation effect="rotatey" center="1290" end="-55" time="200" reversible="false" tween="quadratic" easing="in">Hidden</animation>
									<animation effect="rotatey" center="1290" start="55" end="55" time="0" condition="true">Conditional</animation>
									<include>MovieShowCaseItem0</include>
								</control>
								<control type="group">
									<left>758</left>
									<visible>!String.IsEmpty(Container(535).ListItemNoWrap(-1).FolderPath)</visible>
									<visible>Container.OnNext</visible>
									<animation effect="rotatey" center="608" end="-55" time="200" reversible="false" tween="quadratic">Hidden</animation>
									<control type="image">
										<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-1Var]</texture>
										<include>MovieShowcaseThumb</include>
									</control>
									<control type="image">
										<include>WatchedOverlayShowCase</include>
										<texture colordiffuse="$VAR[Indicators_PrimaryColor]">$VAR[IconOverlay-1Var]</texture>
									</control>
								</control>
							</control>
						</control>
						<control type="group" id="6002">
							<left>55</left>
							<top>570</top>
							<visible>Control.IsVisible(535) + Integer.IsGreater(Container.NumItems,0)</visible>
							<visible>Container.OnPrevious</visible>
							<animation effect="slide" end="135,0" time="200" reversible="false">Hidden</animation>
							<control type="group">
								<left>1500</left>
								<visible>!String.IsEmpty(Container(535).ListItemNoWrap(7).FolderPath)</visible>
								<visible>Container.OnPrevious</visible>
								<animation effect="fade" start="100" end="0" time="70" reversible="false">Hidden</animation>
								<animation effect="rotatey" center="1965" start="55" end="55" time="0" condition="true">Conditional</animation>
								<include>MovieShowCaseItem7</include>
							</control>
							<control type="group">
								<left>1365</left>
								<visible>!String.IsEmpty(Container(535).ListItemNoWrap(6).FolderPath)</visible>
								<animation effect="rotatey" center="1830" start="55" end="55" time="0" condition="true">Conditional</animation>
								<include>MovieShowCaseItem6</include>
							</control>
							<control type="group">
								<left>1230</left>
								<visible>!String.IsEmpty(Container(535).ListItemNoWrap(5).FolderPath)</visible>
								<animation effect="rotatey" center="1695" start="55" end="55" time="0" condition="true">Conditional</animation>
								<include>MovieShowCaseItem5</include>
							</control>
							<control type="group">
								<left>1095</left>
								<visible>!String.IsEmpty(Container(535).ListItemNoWrap(4).FolderPath)</visible>
								<animation effect="rotatey" center="1560" start="55" end="55" time="0" condition="true">Conditional</animation>
								<include>MovieShowCaseItem4</include>
							</control>
							<control type="group">
								<left>960</left>
								<visible>!String.IsEmpty(Container(535).ListItemNoWrap(3).FolderPath)</visible>
								<animation effect="rotatey" center="1425" start="55" end="55" time="0" condition="true">Conditional</animation>
								<include>MovieShowCaseItem3</include>
							</control>
							<control type="group">
								<left>825</left>
								<visible>!String.IsEmpty(Container(535).ListItemNoWrap(2).FolderPath)</visible>
								<animation effect="rotatey" center="1290" start="55" end="55" time="0" condition="true">Conditional</animation>
								<include>MovieShowCaseItem2</include>
							</control>
							<control type="group">
								<left>-120</left>
								<visible>!String.IsEmpty(Container(535).ListItemNoWrap(-6).FolderPath)</visible>
								<visible>!Container.OnPrevious</visible>
								<animation effect="fade" end="100" delay="100" time="200" reversible="false">Visible</animation>
								<animation effect="rotatey" center="-270" start="-55" end="-55" time="0" condition="true">Conditional</animation>
								<include>MovieShowCaseItem-6</include>
							</control>
							<control type="group">
								<left>15</left>
								<visible>!String.IsEmpty(Container(535).ListItemNoWrap(-5).FolderPath)</visible>
								<animation effect="rotatey" center="-135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
								<include>MovieShowCaseItem-5</include>
							</control>
							<control type="group">
								<left>150</left>
								<visible>!String.IsEmpty(Container(535).ListItemNoWrap(-4).FolderPath)</visible>
								<animation effect="rotatey" center="0" start="-55" end="-55" time="0" condition="true">Conditional</animation>
								<include>MovieShowCaseItem-4</include>
							</control>
							<control type="group">
								<left>285</left>
								<visible>!String.IsEmpty(Container(535).ListItemNoWrap(-3).FolderPath)</visible>
								<animation effect="rotatey" center="135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
								<include>MovieShowCaseItem-3</include>
							</control>
							<control type="group">
								<left>420</left>
								<visible>!String.IsEmpty(Container(535).ListItemNoWrap(-2).FolderPath)</visible>
								<animation effect="rotatey" center="270" start="-55" end="-55" time="0" condition="true">Conditional</animation>
								<include>MovieShowCaseItem-2</include>
							</control>
							<control type="group">
								<left>555</left>
								<visible>!String.IsEmpty(Container(535).ListItemNoWrap(-1).FolderPath)</visible>
								<animation effect="rotatey" center="405" start="-55" end="-55" time="0" condition="true">Conditional</animation>
								<include>MovieShowCaseItem-1</include>
							</control>
							<control type="group">
								<visible>Container.OnPrevious</visible>
								<animation effect="slide" end="-75,0" time="200" reversible="false">Hidden</animation>
								<control type="group">
									<left>690</left>
									<visible>Container.OnPrevious</visible>
									<visible>!String.IsEmpty(Container(535).ListItemNoWrap(0).FolderPath)</visible>
									<animation effect="rotatey" center="540" end="55" time="200" reversible="false" tween="quadratic" easing="in">Hidden</animation>
									<animation effect="rotatey" center="540" start="-55" end="-55" time="0" condition="true">Conditional</animation>
									<include>MovieShowCaseItem0</include>
								</control>
								<control type="group">
									<left>758</left>
									<visible>!String.IsEmpty(Container(535).ListItemNoWrap(1).FolderPath)</visible>
									<visible>Container.OnPrevious</visible>
									<animation effect="rotatey" center="1223" end="55" time="200" reversible="false" tween="quadratic">Hidden</animation>
									<control type="image">
										<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem1Var]</texture>
										<include>MovieShowcaseThumb</include>
									</control>
									<control type="image">
										<include>WatchedOverlayShowCase</include>
										<texture colordiffuse="$VAR[Indicators_PrimaryColor]">$VAR[IconOverlay1Var]</texture>
									</control>
								</control>
							</control>
						</control>
						<control type="group" id="6000">
							<left>55</left>
							<top>570</top>
							<visible>Control.IsVisible(535) + Integer.IsGreater(Container.NumItems,0)</visible>
							<visible>!Control.IsVisible(6001) + !Control.IsVisible(6002)</visible>
							<control type="group">
								<left>15</left>
								<visible>!String.IsEmpty(Container(535).ListItemNoWrap(-6).FolderPath)</visible>
								<animation effect="rotatey" center="-135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
								<include>MovieShowCaseItem-6</include>
							</control>
							<control type="group">
								<left>150</left>
								<visible>!String.IsEmpty(Container(535).ListItemNoWrap(-5).FolderPath)</visible>
								<animation effect="rotatey" center="0" start="-55" end="-55" time="0" condition="true">Conditional</animation>
								<include>MovieShowCaseItem-5</include>
							</control>
							<control type="group">
								<left>285</left>
								<visible>!String.IsEmpty(Container(535).ListItemNoWrap(-4).FolderPath)</visible>
								<animation effect="rotatey" center="135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
								<include>MovieShowCaseItem-4</include>
							</control>
							<control type="group">
								<left>420</left>
								<visible>!String.IsEmpty(Container(535).ListItemNoWrap(-3).FolderPath)</visible>
								<animation effect="rotatey" center="270" start="-55" end="-55" time="0" condition="true">Conditional</animation>
								<include>MovieShowCaseItem-3</include>
							</control>
							<control type="group">
								<left>555</left>
								<visible>!String.IsEmpty(Container(535).ListItemNoWrap(-2).FolderPath)</visible>
								<animation effect="rotatey" center="405" start="-55" end="-55" time="0" condition="true">Conditional</animation>
								<include>MovieShowCaseItem-2</include>
							</control>
							<control type="group">
								<left>690</left>
								<visible>!String.IsEmpty(Container(535).ListItemNoWrap(-1).FolderPath)</visible>
								<animation effect="rotatey" center="540" start="-55" end="-55" time="0" condition="true">Conditional</animation>
								<include>MovieShowCaseItem-1</include>
							</control>
							<control type="group">
								<left>1500</left>
								<visible>!String.IsEmpty(Container(535).ListItemNoWrap(6).FolderPath)</visible>
								<animation effect="rotatey" center="1965" start="55" end="55" time="0" condition="true">Conditional</animation>
								<include>MovieShowCaseItem6</include>
							</control>
							<control type="group">
								<left>1365</left>
								<visible>!String.IsEmpty(Container(535).ListItemNoWrap(5).FolderPath)</visible>
								<animation effect="rotatey" center="1830" start="55" end="55" time="0" condition="true">Conditional</animation>
								<include>MovieShowCaseItem5</include>
							</control>
							<control type="group">
								<left>1230</left>
								<visible>!String.IsEmpty(Container(535).ListItemNoWrap(4).FolderPath)</visible>
								<animation effect="rotatey" center="1695" start="55" end="55" time="0" condition="true">Conditional</animation>
								<include>MovieShowCaseItem4</include>
							</control>
							<control type="group">
								<left>1095</left>
								<visible>!String.IsEmpty(Container(535).ListItemNoWrap(3).FolderPath)</visible>
								<animation effect="rotatey" center="1560" start="55" end="55" time="0" condition="true">Conditional</animation>
								<include>MovieShowCaseItem3</include>
							</control>
							<control type="group">
								<left>960</left>
								<visible>!String.IsEmpty(Container(535).ListItemNoWrap(2).FolderPath)</visible>
								<animation effect="rotatey" center="1425" start="55" end="55" time="0" condition="true">Conditional</animation>
								<include>MovieShowCaseItem2</include>
							</control>
							<control type="group">
								<left>825</left>
								<visible>!String.IsEmpty(Container(535).ListItemNoWrap(1).FolderPath)</visible>
								<animation effect="rotatey" center="1290" start="55" end="55" time="0" condition="true">Conditional</animation>
								<include>MovieShowCaseItem1</include>
							</control>
							<control type="group">
								<left>758</left>
								<!-- Workaround for camera bug. As soon as the camera tag is applied to the group, label will be invisible -->
								<!-- <animation effect="rotatey" center="0" start="1" end="1" time="0" condition="true">Conditional</animation> -->
								<visible>!String.IsEmpty(Container(535).ListItemNoWrap(0).FolderPath)</visible>
								<include>MovieShowCaseItem0</include>
							</control>
						</control>
					</control>
					<control type="wraplist" id="535">
						<left>0</left>
						<top>540</top>
						<width>1879</width>
						<height>525</height>
						<onup condition="!Skin.HasSetting(global.kioskmode)">9000</onup>
						<onback condition="Skin.HasSetting(backoption) + !String.IsEqual(Window(home).Property(HubReturn),Home)">ActivateWindow($INFO[Window(home).Property(HubReturn)])</onback>
						<ondown condition="Skin.HasSetting(showscrollbars)">61</ondown>
						<ondown condition="!Skin.HasSetting(showscrollbars) + Skin.HasSetting(AlphabetScrollbar)">6015</ondown>
						<onleft>535</onleft>
						<onright>535</onright>
						<visible>[Container.Content(movies) + [String.IsEqual(Skin.String(Skin.ForcedView.movies),$LOCALIZE[31199]) | String.IsEmpty(Skin.String(Skin.ForcedView.movies)) ]] | [Container.Content(sets) + [String.IsEqual(Skin.String(Skin.ForcedView.sets),$LOCALIZE[31199]) | String.IsEmpty(Skin.String(Skin.ForcedView.sets)) ]] | [Container.Content(tvshows) + [String.IsEqual(Skin.String(Skin.ForcedView.tvshows),$LOCALIZE[31199]) | String.IsEmpty(Skin.String(Skin.ForcedView.tvshows)) ]] | [Container.Content(seasons) + [String.IsEqual(Skin.String(Skin.ForcedView.seasons),$LOCALIZE[31199]) | String.IsEmpty(Skin.String(Skin.ForcedView.seasons)) ]] | [Container.Content(episodes) + [String.IsEqual(Skin.String(Skin.ForcedView.episodes),$LOCALIZE[31199]) | String.IsEmpty(Skin.String(Skin.ForcedView.episodes)) ]] | [Container.Content(videos) + [String.IsEqual(Skin.String(Skin.ForcedView.videos),$LOCALIZE[31199]) | String.IsEmpty(Skin.String(Skin.ForcedView.videos)) ]] | [Container.Content(artists) + [String.IsEqual(Skin.String(Skin.ForcedView.artists),$LOCALIZE[31199]) | String.IsEmpty(Skin.String(Skin.ForcedView.artists)) ]] | [Container.Content(albums) + [String.IsEqual(Skin.String(Skin.ForcedView.albums),$LOCALIZE[31199]) | String.IsEmpty(Skin.String(Skin.ForcedView.albums)) ]]</visible>
				<!--	<visible>Container.Content(movies) | Container.Content(tvshows) | Container.Content(musicvideos) | Container.Content(seasons) | Container.Content(sets)</visible> -->
						<viewtype label="31199">bigwrap</viewtype>
						<pagecontrol>61</pagecontrol>
						<scrolltime tween="quadratic">300</scrolltime>
						<focusposition>3</focusposition>
						<orientation>horizontal</orientation>
						<preloaditems>2</preloaditems>
						<itemlayout height="525" width="260" />
						<focusedlayout height="525" width="260" />
					</control>
				</control>
            </control>
            <!-- Info Box -->
            <control type="group">
                <right>5</right>
                <left>5</left>
                <top>425</top>
                <bottom>5</bottom>
				<visible>!Skin.HasSetting(showcase.hideplot)</visible>
				<animation effect="fade" start="100" end="0" time="600" condition="Skin.HasSetting(showcase.hideplot)">Conditional</animation>
                <control type="grouplist">
                    <usecontrolcoords>true</usecontrolcoords>
                    <itemgap>5</itemgap>
                    <orientation>vertical</orientation>
                    <left>pad</left>
                    <right>pad</right>
                    <top>5</top>
                    <bottom>0</bottom>
                    <control type="label">
                        <top>pad</top>
                        <left>pad</left>
                        <right>pad</right>
                        <height>40</height>
                        <align>center</align>
                        <font>Font-InfoBox-Title</font>
                        <label>$INFO[ListItem.Label]</label>
                    </control>   
                    <control type="label">
                        <left>pad</left>
                        <right>pad</right>
                        <height>30</height>
                        <align>center</align>
                        <textcolor>$VAR[HighlightColor2]</textcolor>
                        <font>Font-ListInfo-Small-Bold</font>
                        <label>$VAR[Label_Genre,[UPPERCASE],[/UPPERCASE]]</label>
                    </control>
                    <control type="label">
                        <left>pad</left>
                        <right>pad</right>
                        <height>32</height>
                        <align>center</align>
                        <font>Font-ListInfo-Small-Bold</font>
                        <label>$VAR[Label_ExtraInfo_Icons]</label>
                    </control>
                    <control type="textbox">
                        <left>pad</left>
                        <right>pad</right>
                        <height>120</height>
                        <font>Font-ListInfo</font>
                        <align>center</align>
                        <label>$VAR[Label_Plot]</label>
                    </control>
                </control>
            </control>
        </control>
    </include>
    <include name="MovieShowcaseThumb">
        <left>-4</left>
        <top>-20</top>
        <width>325</width>
        <height>441</height>
        <align>center</align>
        <aspectratio scalediffuse="false">keep</aspectratio>
        <fadetime>0</fadetime>
        <aspectratio align="center" aligny="center" scalediffuse="false">keep</aspectratio>
		<include condition="Skin.HasSetting(lightshadows)">Object_Shadows_Frame</include>
        <bordersize>24</bordersize>
        <visible>Integer.IsGreater(Container.NumItems,0)</visible>
    </include>
    <include name="WatchedOverlayShowCase">
        <left>230</left>
        <top>-10</top>
        <width>80</width>
        <height>80</height>
        <fadetime>0</fadetime>
        <bordersize>20</bordersize>
    </include>
    <include name="MovieShowCaseItem-7">
        <visible>Control.IsVisible(535) + Integer.IsGreater(Container.NumItems,0)</visible>
        <control type="image">
            <texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-7Var]</texture>
            <include>MovieShowcaseThumb</include>
            <visible>Integer.IsGreater(Container.NumItems,0)</visible>
        </control>
    </include>
    <include name="MovieShowCaseItem-6">
        <control type="image">
            <texture background="true" diffuse="diffuse/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-6Var]</texture>
            <include>MovieShowcaseThumb</include>
            <visible>Integer.IsGreater(Container.NumItems,0)</visible>
        </control>
    </include>
    <include name="MovieShowCaseItem-5">
        <control type="image">
            <texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-5Var]</texture>
            <include>MovieShowcaseThumb</include>
            <visible>Integer.IsGreater(Container.NumItems,0)</visible>
        </control>
    </include>
    <include name="MovieShowCaseItem-4">
        <control type="image">
            <texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-4Var]</texture>
            <include>MovieShowcaseThumb</include>
            <visible>Integer.IsGreater(Container.NumItems,0)</visible>
        </control>
    </include>
    <include name="MovieShowCaseItem-3">
        <control type="image">
            <texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-3Var]</texture>
            <include>MovieShowcaseThumb</include>
            <visible>Integer.IsGreater(Container.NumItems,0)</visible>
        </control>
    </include>
    <include name="MovieShowCaseItem-2">
        <control type="image">
            <texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-2Var]</texture>
            <include>MovieShowcaseThumb</include>
            <visible>Integer.IsGreater(Container.NumItems,0)</visible>
        </control>
    </include>
    <include name="MovieShowCaseItem-1">
        <control type="image">
            <texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-1Var]</texture>
            <include>MovieShowcaseThumb</include>
            <visible>Integer.IsGreater(Container.NumItems,0)</visible>
        </control>
        <control type="image">
            <include>WatchedOverlayShowCase</include>
            <texture colordiffuse="$VAR[Indicators_PrimaryColor]">$VAR[IconOverlay-1Var]</texture>
        </control>
    </include>
    <include name="MovieShowCaseItem0">
        <control type="image">
            <texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem0Var]</texture>
            <include>MovieShowcaseThumb</include>
            <visible>Integer.IsGreater(Container.NumItems,0)</visible>
        </control>
        <control type="image">
            <include>WatchedOverlayShowCase</include>
            <texture colordiffuse="$VAR[Indicators_SecondaryColor]">indicator/back.png</texture>
            <visible>Integer.IsGreater(Container.NumItems,0)</visible>
        </control>		
        <control type="image">
            <include>WatchedOverlayShowCase</include>
            <texture colordiffuse="$VAR[Indicators_PrimaryColor]">$VAR[IconOverlay0Var]</texture>
            <visible>Integer.IsGreater(Container.NumItems,0)</visible>
        </control>
    </include>
    <include name="MovieShowCaseItem1">
        <control type="image">
            <texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem1Var]</texture>
            <include>MovieShowcaseThumb</include>
            <visible>Integer.IsGreater(Container.NumItems,0)</visible>
        </control>
        <control type="image">
            <include>WatchedOverlayShowCase</include>
            <texture colordiffuse="$VAR[Indicators_PrimaryColor]">$VAR[IconOverlay1Var]</texture>
            <visible>Integer.IsGreater(Container.NumItems,0)</visible>
        </control>
    </include>
    <include name="MovieShowCaseItem2">
        <control type="image">
            <texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem2Var]</texture>
            <include>MovieShowcaseThumb</include>
            <visible>Integer.IsGreater(Container.NumItems,0)</visible>
        </control>
        <control type="image">
            <include>WatchedOverlayShowCase</include>
            <texture colordiffuse="$VAR[Indicators_PrimaryColor]">$VAR[IconOverlay2Var]</texture>
            <visible>Integer.IsGreater(Container.NumItems,0)</visible>
        </control>
    </include>
    <include name="MovieShowCaseItem3">
        <control type="image">
            <texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem3Var]</texture>
            <include>MovieShowcaseThumb</include>
            <visible>Integer.IsGreater(Container.NumItems,0)</visible>
        </control>
        <control type="image">
            <include>WatchedOverlayShowCase</include>
            <texture colordiffuse="$VAR[Indicators_PrimaryColor]">$VAR[IconOverlay3Var]</texture>
            <visible>Integer.IsGreater(Container.NumItems,0)</visible>
        </control>
    </include>
    <include name="MovieShowCaseItem4">
        <control type="image">
            <texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem4Var]</texture>
            <include>MovieShowcaseThumb</include>
            <visible>Integer.IsGreater(Container.NumItems,0)</visible>
        </control>
        <control type="image">
            <include>WatchedOverlayShowCase</include>
            <texture colordiffuse="$VAR[Indicators_PrimaryColor]">$VAR[IconOverlay4Var]</texture>
            <visible>Integer.IsGreater(Container.NumItems,0)</visible>
        </control>
    </include>
    <include name="MovieShowCaseItem5">
        <control type="image">
            <texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem5Var]</texture>
            <include>MovieShowcaseThumb</include>
            <visible>Integer.IsGreater(Container.NumItems,0)</visible>
        </control>
        <control type="image">
            <include>WatchedOverlayShowCase</include>
            <texture colordiffuse="$VAR[Indicators_PrimaryColor]">$VAR[IconOverlay5Var]</texture>
            <visible>Integer.IsGreater(Container.NumItems,0)</visible>
        </control>
    </include>
    <include name="MovieShowCaseItem6">
        <control type="image">
            <texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem6Var]</texture>
            <include>MovieShowcaseThumb</include>
            <visible>Integer.IsGreater(Container.NumItems,0)</visible>
        </control>
        <control type="image">
            <include>WatchedOverlayShowCase</include>
            <texture colordiffuse="$VAR[Indicators_PrimaryColor]">$VAR[IconOverlay6Var]</texture>
            <visible>Integer.IsGreater(Container.NumItems,0)</visible>
        </control>
    </include>
    <include name="MovieShowCaseItem7">
        <control type="image">
            <texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem7Var]</texture>
            <include>MovieShowcaseThumb</include>
            <visible>Integer.IsGreater(Container.NumItems,0)</visible>
        </control>
        <control type="image">
            <include>WatchedOverlayShowCase</include>
            <texture colordiffuse="$VAR[Indicators_PrimaryColor]">$VAR[IconOverlay7Var]</texture>
            <visible>Integer.IsGreater(Container.NumItems,0)</visible>
        </control>
    </include>
    <variable name="ShowcaseItem-7Var">
        <value condition="!String.IsEmpty(ListItem(-7).Art(poster))">$INFO[ListItem(-7).Art(poster)]</value>
        <value condition="Container.Content(genres)">$INFO[ListItem(-7).Label,special://skin/extras/moviegenres/,.jpg]</value>
        <value>$INFO[ListItem(-7).Icon]</value>
    </variable>
    <variable name="ShowcaseItem-6Var">
        <value condition="!String.IsEmpty(ListItem(-6).Art(poster))">$INFO[ListItem(-6).Art(poster)]</value>
        <value condition="Container.Content(genres)">$INFO[ListItem(-6).Label,special://skin/extras/moviegenres/,.jpg]</value>
        <value>$INFO[ListItem(-6).Icon]</value>
    </variable>
    <variable name="ShowcaseItem-5Var">
        <value condition="!String.IsEmpty(ListItem(-5).Art(poster))">$INFO[ListItem(-5).Art(poster)]</value>
        <value condition="Container.Content(genres)">$INFO[ListItem(-5).Label,special://skin/extras/moviegenres/,.jpg]</value>
        <value>$INFO[ListItem(-5).Icon]</value>
    </variable>
    <variable name="ShowcaseItem-4Var">
        <value condition="!String.IsEmpty(ListItem(-4).Art(poster))">$INFO[ListItem(-4).Art(poster)]</value>
        <value condition="Container.Content(genres)">$INFO[ListItem(-4).Label,special://skin/extras/moviegenres/,.jpg]</value>
        <value>$INFO[ListItem(-4).Icon]</value>
    </variable>
    <variable name="ShowcaseItem-3Var">
        <value condition="!String.IsEmpty(ListItem(-3).Art(poster))">$INFO[ListItem(-3).Art(poster)]</value>
        <value condition="Container.Content(genres)">$INFO[ListItem(-3).Label,special://skin/extras/moviegenres/,.jpg]</value>
        <value>$INFO[ListItem(-3).Icon]</value>
    </variable>
    <variable name="ShowcaseItem-2Var">
        <value condition="!String.IsEmpty(ListItem(-2).Art(poster))">$INFO[ListItem(-2).Art(poster)]</value>
        <value condition="Container.Content(genres)">$INFO[ListItem(-2).Label,special://skin/extras/moviegenres/,.jpg]</value>
        <value>$INFO[ListItem(-2).Icon]</value>
    </variable>
    <variable name="ShowcaseItem-1Var">
        <value condition="!String.IsEmpty(ListItem(-1).Art(poster))">$INFO[ListItem(-1).Art(poster)]</value>
        <value condition="Container.Content(genres)">$INFO[ListItem(-1).Label,special://skin/extras/moviegenres/,.jpg]</value>
        <value>$INFO[ListItem(-1).Icon]</value>
    </variable>
    <variable name="ShowcaseItem0Var">
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.AnimatedPoster)) + Skin.HasSetting(SkinHelperAnimations)">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.AnimatedPoster)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
        <value condition="Container.Content(genres)">$INFO[ListItem.Label,special://skin/extras/moviegenres/,.jpg]</value>
        <value>$INFO[ListItem.Icon]</value>
    </variable>
    <variable name="ShowcaseItem1Var">
        <value condition="!String.IsEmpty(ListItem(1).Art(poster))">$INFO[ListItem(1).Art(poster)]</value>
        <value condition="Container.Content(genres)">$INFO[ListItem(1).Label,special://skin/extras/moviegenres/,.jpg]</value>
        <value>$INFO[ListItem(1).Icon]</value>
    </variable>
    <variable name="ShowcaseItem2Var">
        <value condition="!String.IsEmpty(ListItem(2).Art(poster))">$INFO[ListItem(2).Art(poster)]</value>
        <value condition="Container.Content(genres)">$INFO[ListItem(2).Label,special://skin/extras/moviegenres/,.jpg]</value>
        <value>$INFO[ListItem(2).Icon]</value>
    </variable>
    <variable name="ShowcaseItem3Var">
        <value condition="!String.IsEmpty(ListItem(3).Art(poster))">$INFO[ListItem(3).Art(poster)]</value>
        <value condition="Container.Content(genres)">$INFO[ListItem(3).Label,special://skin/extras/moviegenres/,.jpg]</value>
        <value>$INFO[ListItem(3).Icon]</value>
    </variable>
    <variable name="ShowcaseItem4Var">
        <value condition="!String.IsEmpty(ListItem(4).Art(poster))">$INFO[ListItem(4).Art(poster)]</value>
        <value condition="Container.Content(genres)">$INFO[ListItem(4).Label,special://skin/extras/moviegenres/,.jpg]</value>
        <value>$INFO[ListItem(4).Icon]</value>
    </variable>
    <variable name="ShowcaseItem5Var">
        <value condition="!String.IsEmpty(ListItem(5).Art(poster))">$INFO[ListItem(5).Art(poster)]</value>
        <value condition="Container.Content(genres)">$INFO[ListItem(5).Label,special://skin/extras/moviegenres/,.jpg]</value>
        <value>$INFO[ListItem(5).Icon]</value>
    </variable>
    <variable name="ShowcaseItem6Var">
        <value condition="!String.IsEmpty(ListItem(6).Art(poster))">$INFO[ListItem(6).Art(poster)]</value>
        <value condition="Container.Content(genres)">$INFO[ListItem(6).Label,special://skin/extras/moviegenres/,.jpg]</value>
        <value>$INFO[ListItem(6).Icon]</value>
    </variable>
    <variable name="ShowcaseItem7Var">
        <value condition="!String.IsEmpty(ListItem(7).Art(poster))">$INFO[ListItem(7).Art(poster)]</value>
        <value condition="Container.Content(genres)">$INFO[ListItem(7).Label,special://skin/extras/moviegenres/,.jpg]</value>
        <value>$INFO[ListItem(7).Icon]</value>
    </variable>
    <variable name="ShowcaseItem8Var">
        <value condition="!String.IsEmpty(ListItem(8).Art(poster))">$INFO[ListItem(8).Art(poster)]</value>
        <value condition="Container.Content(genres)">$INFO[ListItem(8).Label,special://skin/extras/moviegenres/,.jpg]</value>
        <value>$INFO[ListItem(8).Icon]</value>
    </variable>
    <variable name="ShowcaseItem9Var">
        <value condition="!String.IsEmpty(ListItem(9).Art(poster))">$INFO[ListItem(9).Art(poster)]</value>
        <value condition="Container.Content(genres)">$INFO[ListItem(9).Label,special://skin/extras/moviegenres/,.jpg]</value>
        <value>$INFO[ListItem(9).Icon]</value>
    </variable>
    <variable name="IconOverlay-1Var">
        <value condition="ListItem(-1).IsResumable + String.IsEmpty(Window(Home).Property(Overlay.Resumable))">indicator/inprogress.png</value>
        <value condition="String.IsEqual(ListItem(-1).Overlay,OverlayWatched.png)">indicator/checkmark.png</value>
		<value condition="String.IsEqual(ListItem(-1).Overlay,OverlayUnwatched.png)">indicator/unwatched.png</value>
    </variable>
    <variable name="IconOverlay0Var">
        <value condition="ListItem.IsResumable + String.IsEmpty(Window(Home).Property(Overlay.Resumable))">indicator/inprogress.png</value>
        <value condition="String.IsEqual(ListItem.Overlay,OverlayWatched.png)">indicator/checkmark.png</value>
		<value condition="String.IsEqual(ListItem.Overlay,OverlayUnwatched.png)">indicator/unwatched.png</value>
    </variable>
    <variable name="IconOverlay1Var">
        <value condition="ListItem(1).IsResumable + String.IsEmpty(Window(Home).Property(Overlay.Resumable))">indicator/inprogress.png</value>
        <value condition="String.IsEqual(ListItem(1).Overlay,OverlayWatched.png)">indicator/checkmark.png</value>
		<value condition="String.IsEqual(ListItem(1).Overlay,OverlayUnwatched.png)">indicator/unwatched.png</value>
    </variable>
    <variable name="IconOverlay2Var">
        <value condition="ListItem(2).IsResumable + String.IsEmpty(Window(Home).Property(Overlay.Resumable))">indicator/inprogress.png</value>
        <value condition="String.IsEqual(ListItem(2).Overlay,OverlayWatched.png)">indicator/checkmark.png</value>
		<value condition="String.IsEqual(ListItem(2).Overlay,OverlayUnwatched.png)">indicator/unwatched.png</value>
    </variable>
    <variable name="IconOverlay3Var">
        <value condition="ListItem(3).IsResumable + String.IsEmpty(Window(Home).Property(Overlay.Resumable))">indicator/inprogress.png</value>
        <value condition="String.IsEqual(ListItem(3).Overlay,OverlayWatched.png)">indicator/checkmark.png</value>
		<value condition="String.IsEqual(ListItem(3).Overlay,OverlayUnwatched.png)">indicator/unwatched.png</value>
    </variable>
    <variable name="IconOverlay4Var">
        <value condition="ListItem(4).IsResumable + String.IsEmpty(Window(Home).Property(Overlay.Resumable))">indicator/inprogress.png</value>
        <value condition="String.IsEqual(ListItem(4).Overlay,OverlayWatched.png)">indicator/checkmark.png</value>
		<value condition="String.IsEqual(ListItem(4).Overlay,OverlayUnwatched.png)">indicator/unwatched.png</value>
    </variable>
    <variable name="IconOverlay5Var">
        <value condition="ListItem(5).IsResumable + String.IsEmpty(Window(Home).Property(Overlay.Resumable))">indicator/inprogress.png</value>
        <value condition="String.IsEqual(ListItem(5).Overlay,OverlayWatched.png)">indicator/checkmark.png</value>
		<value condition="String.IsEqual(ListItem(5).Overlay,OverlayUnwatched.png)">indicator/unwatched.png</value>
    </variable>
    <variable name="IconOverlay6Var">
        <value condition="ListItem(6).IsResumable + String.IsEmpty(Window(Home).Property(Overlay.Resumable))">indicator/inprogress.png</value>
        <value condition="String.IsEqual(ListItem(6).Overlay,OverlayWatched.png)">indicator/checkmark.png</value>
		<value condition="String.IsEqual(ListItem(6).Overlay,OverlayUnwatched.png)">indicator/unwatched.png</value>
    </variable>
    <variable name="IconOverlay7Var">
        <value condition="ListItem(7).IsResumable + String.IsEmpty(Window(Home).Property(Overlay.Resumable))">indicator/inprogress.png</value>
        <value condition="String.IsEqual(ListItem(7).Overlay,OverlayWatched.png)">indicator/checkmark.png</value>
		<value condition="String.IsEqual(ListItem(7).Overlay,OverlayUnwatched.png)">indicator/unwatched.png</value>
    </variable>
    <variable name="IconOverlay8Var">
        <value condition="ListItem(8).IsResumable + String.IsEmpty(Window(Home).Property(Overlay.Resumable))">indicator/inprogress.png</value>
        <value condition="String.IsEqual(ListItem(8).Overlay,OverlayWatched.png)">indicator/checkmark.png</value>
		<value condition="String.IsEqual(ListItem(8).Overlay,OverlayUnwatched.png)">indicator/unwatched.png</value>
    </variable>
    <variable name="IconOverlay9Var">
        <value condition="ListItem(9).IsResumable + String.IsEmpty(Window(Home).Property(Overlay.Resumable))">indicator/inprogress.png</value>
        <value condition="String.IsEqual(ListItem(9).Overlay,OverlayWatched.png)">indicator/checkmark.png</value>
		<value condition="String.IsEqual(ListItem(9).Overlay,OverlayUnwatched.png)">indicator/unwatched.png</value>
    </variable>
</includes>